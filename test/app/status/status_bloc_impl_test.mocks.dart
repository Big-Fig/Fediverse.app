// Mocks generated by Mockito 5.0.10 from annotations
// in fedi/test/app/status/status_bloc_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;

import 'package:base_fediverse_api/src/rest/rest_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pleroma_fediverse_api/src/pleroma/api/account/auth/pleroma_api_auth_account_service.dart'
    as _i11;
import 'package:pleroma_fediverse_api/src/pleroma/api/account/pleroma_api_account_model.dart'
    as _i5;
import 'package:pleroma_fediverse_api/src/pleroma/api/list/pleroma_api_list_model.dart'
    as _i12;
import 'package:pleroma_fediverse_api/src/pleroma/api/pagination/pleroma_api_pagination_model.dart'
    as _i10;
import 'package:pleroma_fediverse_api/src/pleroma/api/pleroma_api_service.dart'
    as _i9;
import 'package:pleroma_fediverse_api/src/pleroma/api/poll/pleroma_api_poll_model.dart'
    as _i6;
import 'package:pleroma_fediverse_api/src/pleroma/api/poll/pleroma_api_poll_service.dart'
    as _i14;
import 'package:pleroma_fediverse_api/src/pleroma/api/status/auth/pleroma_api_auth_status_service.dart'
    as _i7;
import 'package:pleroma_fediverse_api/src/pleroma/api/status/context/pleroma_api_status_context_model.dart'
    as _i4;
import 'package:pleroma_fediverse_api/src/pleroma/api/status/emoji_reaction/pleroma_api_status_emoji_reaction_service.dart'
    as _i13;
import 'package:pleroma_fediverse_api/src/pleroma/api/status/pleroma_api_status_model.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeIRestService extends _i1.Fake implements _i2.IRestService {}

class _FakeIUnifediApiStatus extends _i1.Fake implements _i3.IUnifediApiStatus {
}

class _FakeIUnifediApiScheduledStatus extends _i1.Fake
    implements _i3.IUnifediApiScheduledStatus {}

class _FakeIUnifediApiStatusContext extends _i1.Fake
    implements _i4.IUnifediApiStatusContext {}

class _FakeIUnifediApiAccountRelationship extends _i1.Fake
    implements _i5.IUnifediApiAccountRelationship {}

class _FakeIUnifediApiAccount extends _i1.Fake
    implements _i5.IUnifediApiAccount {}

class _FakeIUnifediApiEmojiReaction extends _i1.Fake
    implements _i3.IUnifediApiEmojiReaction {}

class _FakeIUnifediApiPoll extends _i1.Fake implements _i6.IUnifediApiPoll {}

/// A class which mocks [IUnifediApiStatusService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiStatusService extends _i1.Mock
    implements _i7.IUnifediApiStatusService {
  MockIUnifediApiStatusService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
          returnValue: _FakeIRestService()) as _i2.IRestService);
  @override
  _i8.Stream<_i9.UnifediApiState> get unifediApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#unifediApiStateStream),
              returnValue: Stream<_i9.UnifediApiState>.empty())
          as _i8.Stream<_i9.UnifediApiState>);
  @override
  _i9.UnifediApiState get unifediApiState =>
      (super.noSuchMethod(Invocation.getter(#unifediApiState),
          returnValue: _i9.UnifediApiState.validAuth) as _i9.UnifediApiState);
  @override
  _i8.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i8.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  bool get isPleroma =>
      (super.noSuchMethod(Invocation.getter(#isPleroma), returnValue: false)
          as bool);
  @override
  bool get isMastodon =>
      (super.noSuchMethod(Invocation.getter(#isMastodon), returnValue: false)
          as bool);
  @override
  _i8.Future<_i3.IUnifediApiStatus> postStatus(
          {_i3.IUnifediApiPostStatus? data}) =>
      (super.noSuchMethod(Invocation.method(#postStatus, [], {#data: data}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiScheduledStatus> scheduleStatus(
          {_i3.IUnifediApiSchedulePostStatus? data}) =>
      (super.noSuchMethod(Invocation.method(#scheduleStatus, [], {#data: data}),
              returnValue: Future<_i3.IUnifediApiScheduledStatus>.value(
                  _FakeIUnifediApiScheduledStatus()))
          as _i8.Future<_i3.IUnifediApiScheduledStatus>);
  @override
  _i8.Future<dynamic> deleteStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #deleteStatus, [], {#statusRemoteId: statusRemoteId}),
          returnValue: Future<dynamic>.value()) as _i8.Future<dynamic>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> muteStatus(
          {String? statusRemoteId, int? expireDurationInSeconds}) =>
      (super.noSuchMethod(
              Invocation.method(#muteStatus, [], {
                #statusRemoteId: statusRemoteId,
                #expireDurationInSeconds: expireDurationInSeconds
              }),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> unMuteStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unMuteStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> pinStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(#pinStatus, [], {#statusRemoteId: statusRemoteId}),
          returnValue: Future<_i3.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus())) as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> unPinStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unPinStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> favouriteStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #favouriteStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> unFavouriteStatus(
          {String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unFavouriteStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> bookmarkStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #bookmarkStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> unBookmarkStatus(
          {String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unBookmarkStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> reblogStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #reblogStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> unReblogStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unReblogStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<List<_i5.IUnifediApiAccount>> favouritedBy(
          {String? statusRemoteId,
          _i10.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#favouritedBy, [],
                  {#statusRemoteId: statusRemoteId, #pagination: pagination}),
              returnValue: Future<List<_i5.IUnifediApiAccount>>.value(
                  <_i5.IUnifediApiAccount>[]))
          as _i8.Future<List<_i5.IUnifediApiAccount>>);
  @override
  _i8.Future<List<_i5.IUnifediApiAccount>> rebloggedBy(
          {String? statusRemoteId,
          _i10.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#rebloggedBy, [],
                  {#statusRemoteId: statusRemoteId, #pagination: pagination}),
              returnValue: Future<List<_i5.IUnifediApiAccount>>.value(
                  <_i5.IUnifediApiAccount>[]))
          as _i8.Future<List<_i5.IUnifediApiAccount>>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> getStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(#getStatus, [], {#statusRemoteId: statusRemoteId}),
          returnValue: Future<_i3.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus())) as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i4.IUnifediApiStatusContext> getStatusContext(
          {String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getStatusContext, [], {#statusRemoteId: statusRemoteId}),
              returnValue: Future<_i4.IUnifediApiStatusContext>.value(
                  _FakeIUnifediApiStatusContext()))
          as _i8.Future<_i4.IUnifediApiStatusContext>);
  @override
  _i8.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i8.Future<dynamic>);
}

/// A class which mocks [IUnifediApiAccountService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiAccountService extends _i1.Mock
    implements _i11.IUnifediApiAccountService {
  MockIUnifediApiAccountService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
          returnValue: _FakeIRestService()) as _i2.IRestService);
  @override
  _i8.Stream<_i9.UnifediApiState> get unifediApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#unifediApiStateStream),
              returnValue: Stream<_i9.UnifediApiState>.empty())
          as _i8.Stream<_i9.UnifediApiState>);
  @override
  _i9.UnifediApiState get unifediApiState =>
      (super.noSuchMethod(Invocation.getter(#unifediApiState),
          returnValue: _i9.UnifediApiState.validAuth) as _i9.UnifediApiState);
  @override
  _i8.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i8.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  bool get isPleroma =>
      (super.noSuchMethod(Invocation.getter(#isPleroma), returnValue: false)
          as bool);
  @override
  bool get isMastodon =>
      (super.noSuchMethod(Invocation.getter(#isMastodon), returnValue: false)
          as bool);
  @override
  _i8.Future<List<_i5.IUnifediApiAccountRelationship>>
      getRelationshipWithAccounts({List<String>? remoteAccountIds}) =>
          (super.noSuchMethod(
                  Invocation.method(#getRelationshipWithAccounts, [],
                      {#remoteAccountIds: remoteAccountIds}),
                  returnValue:
                      Future<List<_i5.IUnifediApiAccountRelationship>>.value(
                          <_i5.IUnifediApiAccountRelationship>[]))
              as _i8.Future<List<_i5.IUnifediApiAccountRelationship>>);
  @override
  _i8.Future<List<_i5.IUnifediApiAccount>> search(
          {String? query,
          bool? resolve,
          bool? following,
          _i10.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#search, [], {
                #query: query,
                #resolve: resolve,
                #following: following,
                #pagination: pagination
              }),
              returnValue: Future<List<_i5.IUnifediApiAccount>>.value(
                  <_i5.IUnifediApiAccount>[]))
          as _i8.Future<List<_i5.IUnifediApiAccount>>);
  @override
  _i8.Future<List<_i12.IUnifediApiList>> getListsWithAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getListsWithAccount, [], {#accountRemoteId: accountRemoteId}),
          returnValue: Future<List<_i12.IUnifediApiList>>.value(
              <_i12.IUnifediApiList>[])) as _i8
          .Future<List<_i12.IUnifediApiList>>);
  @override
  _i8.Future<List<_i5.IUnifediApiAccountIdentityProof>>
      getAccountIdentifyProofs({String? accountRemoteId}) => (super
              .noSuchMethod(
                  Invocation.method(#getAccountIdentifyProofs, [], {
                    #accountRemoteId: accountRemoteId
                  }),
                  returnValue:
                      Future<List<_i5.IUnifediApiAccountIdentityProof>>.value(
                          <_i5.IUnifediApiAccountIdentityProof>[]))
          as _i8.Future<List<_i5.IUnifediApiAccountIdentityProof>>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> followAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #followAccount, [], {#accountRemoteId: accountRemoteId}),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> unFollowAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unFollowAccount, [], {#accountRemoteId: accountRemoteId}),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> subscribeAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #subscribeAccount, [], {#accountRemoteId: accountRemoteId}),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> unSubscribeAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unSubscribeAccount, [], {#accountRemoteId: accountRemoteId}),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> pinAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #pinAccount, [], {#accountRemoteId: accountRemoteId}),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> unPinAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unPinAccount, [], {#accountRemoteId: accountRemoteId}),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> muteAccount(
          {String? accountRemoteId,
          bool? notifications,
          int? expireDurationInSeconds}) =>
      (super.noSuchMethod(
              Invocation.method(#muteAccount, [], {
                #accountRemoteId: accountRemoteId,
                #notifications: notifications,
                #expireDurationInSeconds: expireDurationInSeconds
              }),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> unMuteAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unMuteAccount, [], {#accountRemoteId: accountRemoteId}),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> blockAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #blockAccount, [], {#accountRemoteId: accountRemoteId}),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<_i5.IUnifediApiAccountRelationship> unBlockAccount(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unBlockAccount, [], {#accountRemoteId: accountRemoteId}),
              returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i8.Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i8.Future<dynamic> blockDomain({String? domain}) => (super.noSuchMethod(
      Invocation.method(#blockDomain, [], {#domain: domain}),
      returnValue: Future<dynamic>.value()) as _i8.Future<dynamic>);
  @override
  _i8.Future<dynamic> unBlockDomain({String? domain}) => (super.noSuchMethod(
      Invocation.method(#unBlockDomain, [], {#domain: domain}),
      returnValue: Future<dynamic>.value()) as _i8.Future<dynamic>);
  @override
  _i8.Future<dynamic> reportAccount(
          {_i5.IUnifediApiAccountReportRequest? reportRequest}) =>
      (super.noSuchMethod(
          Invocation.method(
              #reportAccount, [], {#reportRequest: reportRequest}),
          returnValue: Future<dynamic>.value()) as _i8.Future<dynamic>);
  @override
  _i8.Future<List<_i5.IUnifediApiAccount>> getAccountFollowings(
          {String? accountRemoteId,
          bool? withRelationship,
          _i10.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountFollowings, [], {
                #accountRemoteId: accountRemoteId,
                #withRelationship: withRelationship,
                #pagination: pagination
              }),
              returnValue: Future<List<_i5.IUnifediApiAccount>>.value(
                  <_i5.IUnifediApiAccount>[]))
          as _i8.Future<List<_i5.IUnifediApiAccount>>);
  @override
  _i8.Future<List<_i5.IUnifediApiAccount>> getAccountFollowers(
          {String? accountRemoteId,
          bool? withRelationship,
          _i10.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountFollowers, [], {
                #accountRemoteId: accountRemoteId,
                #withRelationship: withRelationship,
                #pagination: pagination
              }),
              returnValue: Future<List<_i5.IUnifediApiAccount>>.value(
                  <_i5.IUnifediApiAccount>[]))
          as _i8.Future<List<_i5.IUnifediApiAccount>>);
  @override
  _i8.Future<List<_i3.IUnifediApiStatus>> getAccountStatuses(
          {String? accountRemoteId,
          String? tagged,
          bool? pinned,
          bool? excludeReplies,
          bool? excludeReblogs,
          List<String>? excludeVisibilities,
          bool? withMuted,
          bool? onlyWithMedia,
          _i10.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountStatuses, [], {
                #accountRemoteId: accountRemoteId,
                #tagged: tagged,
                #pinned: pinned,
                #excludeReplies: excludeReplies,
                #excludeReblogs: excludeReblogs,
                #excludeVisibilities: excludeVisibilities,
                #withMuted: withMuted,
                #onlyWithMedia: onlyWithMedia,
                #pagination: pagination
              }),
              returnValue: Future<List<_i3.IUnifediApiStatus>>.value(
                  <_i3.IUnifediApiStatus>[]))
          as _i8.Future<List<_i3.IUnifediApiStatus>>);
  @override
  _i8.Future<List<_i3.IUnifediApiStatus>> getAccountFavouritedStatuses(
          {String? accountRemoteId,
          _i10.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountFavouritedStatuses, [],
                  {#accountRemoteId: accountRemoteId, #pagination: pagination}),
              returnValue: Future<List<_i3.IUnifediApiStatus>>.value(
                  <_i3.IUnifediApiStatus>[]))
          as _i8.Future<List<_i3.IUnifediApiStatus>>);
  @override
  _i8.Future<_i5.IUnifediApiAccount> getAccount(
          {String? accountRemoteId, bool? withRelationship}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccount, [], {
                #accountRemoteId: accountRemoteId,
                #withRelationship: withRelationship
              }),
              returnValue: Future<_i5.IUnifediApiAccount>.value(
                  _FakeIUnifediApiAccount()))
          as _i8.Future<_i5.IUnifediApiAccount>);
  @override
  _i8.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i8.Future<dynamic>);
}

/// A class which mocks [IUnifediApiStatusService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiStatusService extends _i1.Mock
    implements _i13.IUnifediApiStatusService {
  MockIUnifediApiStatusService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
          returnValue: _FakeIRestService()) as _i2.IRestService);
  @override
  _i8.Stream<_i9.UnifediApiState> get unifediApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#unifediApiStateStream),
              returnValue: Stream<_i9.UnifediApiState>.empty())
          as _i8.Stream<_i9.UnifediApiState>);
  @override
  _i9.UnifediApiState get unifediApiState =>
      (super.noSuchMethod(Invocation.getter(#unifediApiState),
          returnValue: _i9.UnifediApiState.validAuth) as _i9.UnifediApiState);
  @override
  _i8.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i8.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i8.Future<_i3.IUnifediApiStatus> addReaction(
          {String? statusRemoteId, String? emoji}) =>
      (super.noSuchMethod(
              Invocation.method(#addReaction, [],
                  {#statusRemoteId: statusRemoteId, #emoji: emoji}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<_i3.IUnifediApiStatus> removeReaction(
          {String? statusRemoteId, String? emoji}) =>
      (super.noSuchMethod(
              Invocation.method(#removeReaction, [],
                  {#statusRemoteId: statusRemoteId, #emoji: emoji}),
              returnValue:
                  Future<_i3.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i8.Future<_i3.IUnifediApiStatus>);
  @override
  _i8.Future<List<_i3.IUnifediApiEmojiReaction>> getReactions(
          {String? statusRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getReactions, [], {#statusRemoteId: statusRemoteId}),
          returnValue: Future<List<_i3.IUnifediApiEmojiReaction>>.value(
              <_i3.IUnifediApiEmojiReaction>[])) as _i8
          .Future<List<_i3.IUnifediApiEmojiReaction>>);
  @override
  _i8.Future<_i3.IUnifediApiEmojiReaction> getReaction(
          {String? statusRemoteId, String? emoji}) =>
      (super.noSuchMethod(
              Invocation.method(#getReaction, [],
                  {#statusRemoteId: statusRemoteId, #emoji: emoji}),
              returnValue: Future<_i3.IUnifediApiEmojiReaction>.value(
                  _FakeIUnifediApiEmojiReaction()))
          as _i8.Future<_i3.IUnifediApiEmojiReaction>);
  @override
  _i8.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i8.Future<dynamic>);
}

/// A class which mocks [IUnifediApiPollService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiPollService extends _i1.Mock
    implements _i14.IUnifediApiPollService {
  MockIUnifediApiPollService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
          returnValue: _FakeIRestService()) as _i2.IRestService);
  @override
  _i8.Stream<_i9.UnifediApiState> get unifediApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#unifediApiStateStream),
              returnValue: Stream<_i9.UnifediApiState>.empty())
          as _i8.Stream<_i9.UnifediApiState>);
  @override
  _i9.UnifediApiState get unifediApiState =>
      (super.noSuchMethod(Invocation.getter(#unifediApiState),
          returnValue: _i9.UnifediApiState.validAuth) as _i9.UnifediApiState);
  @override
  _i8.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i8.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i8.Future<_i6.IUnifediApiPoll> getPoll({String? pollRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(#getPoll, [], {#pollRemoteId: pollRemoteId}),
              returnValue:
                  Future<_i6.IUnifediApiPoll>.value(_FakeIUnifediApiPoll()))
          as _i8.Future<_i6.IUnifediApiPoll>);
  @override
  _i8.Future<_i6.IUnifediApiPoll> vote(
          {String? pollRemoteId, List<int>? voteIndexes}) =>
      (super.noSuchMethod(
              Invocation.method(#vote, [],
                  {#pollRemoteId: pollRemoteId, #voteIndexes: voteIndexes}),
              returnValue:
                  Future<_i6.IUnifediApiPoll>.value(_FakeIUnifediApiPoll()))
          as _i8.Future<_i6.IUnifediApiPoll>);
  @override
  _i8.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i8.Future<dynamic>);
}

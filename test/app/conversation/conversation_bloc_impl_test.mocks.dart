// Mocks generated by Mockito 5.0.10 from annotations
// in fedi/test/app/conversation/conversation_bloc_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i9;

import 'package:base_fediverse_api/src/rest/rest_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pleroma_fediverse_api/src/pleroma/api/account/my/pleroma_api_my_account_model.dart'
    as _i6;
import 'package:pleroma_fediverse_api/src/pleroma/api/account/my/pleroma_api_my_account_service.dart'
    as _i13;
import 'package:pleroma_fediverse_api/src/pleroma/api/account/pleroma_api_account_model.dart'
    as _i7;
import 'package:pleroma_fediverse_api/src/pleroma/api/conversation/pleroma_api_conversation_model.dart'
    as _i3;
import 'package:pleroma_fediverse_api/src/pleroma/api/conversation/pleroma_api_conversation_service.dart'
    as _i8;
import 'package:pleroma_fediverse_api/src/pleroma/api/pagination/pleroma_api_pagination_model.dart'
    as _i11;
import 'package:pleroma_fediverse_api/src/pleroma/api/pleroma_api_service.dart'
    as _i10;
import 'package:pleroma_fediverse_api/src/pleroma/api/status/auth/pleroma_api_auth_status_service.dart'
    as _i12;
import 'package:pleroma_fediverse_api/src/pleroma/api/status/context/pleroma_api_status_context_model.dart'
    as _i5;
import 'package:pleroma_fediverse_api/src/pleroma/api/status/pleroma_api_status_model.dart'
    as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeIRestService extends _i1.Fake implements _i2.IRestService {}

class _FakeIUnifediApiConversation extends _i1.Fake
    implements _i3.IUnifediApiConversation {}

class _FakeIUnifediApiStatus extends _i1.Fake implements _i4.IUnifediApiStatus {
}

class _FakeIUnifediApiScheduledStatus extends _i1.Fake
    implements _i4.IUnifediApiScheduledStatus {}

class _FakeIUnifediApiStatusContext extends _i1.Fake
    implements _i5.IUnifediApiStatusContext {}

class _FakeIUnifediApiMyAccount extends _i1.Fake
    implements _i6.IUnifediApiMyAccount {}

class _FakeIUnifediApiAccountRelationship extends _i1.Fake
    implements _i7.IUnifediApiAccountRelationship {}

/// A class which mocks [IUnifediApiConversationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiConversationService extends _i1.Mock
    implements _i8.IUnifediApiConversationService {
  MockIUnifediApiConversationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isPleroma =>
      (super.noSuchMethod(Invocation.getter(#isPleroma), returnValue: false)
          as bool);
  @override
  bool get isMastodon =>
      (super.noSuchMethod(Invocation.getter(#isMastodon), returnValue: false)
          as bool);
  @override
  _i2.IRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
          returnValue: _FakeIRestService()) as _i2.IRestService);
  @override
  _i9.Stream<_i10.UnifediApiState> get unifediApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#unifediApiStateStream),
              returnValue: Stream<_i10.UnifediApiState>.empty())
          as _i9.Stream<_i10.UnifediApiState>);
  @override
  _i10.UnifediApiState get unifediApiState =>
      (super.noSuchMethod(Invocation.getter(#unifediApiState),
          returnValue: _i10.UnifediApiState.validAuth) as _i10.UnifediApiState);
  @override
  _i9.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i9.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i9.Future<List<_i4.IUnifediApiStatus>> getConversationStatuses(
          {String? conversationRemoteId,
          _i11.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getConversationStatuses, [], {
                #conversationRemoteId: conversationRemoteId,
                #pagination: pagination
              }),
              returnValue: Future<List<_i4.IUnifediApiStatus>>.value(
                  <_i4.IUnifediApiStatus>[]))
          as _i9.Future<List<_i4.IUnifediApiStatus>>);
  @override
  _i9.Future<_i3.IUnifediApiConversation> getConversation(
          {String? conversationRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(#getConversation, [],
                  {#conversationRemoteId: conversationRemoteId}),
              returnValue: Future<_i3.IUnifediApiConversation>.value(
                  _FakeIUnifediApiConversation()))
          as _i9.Future<_i3.IUnifediApiConversation>);
  @override
  _i9.Future<_i3.IUnifediApiConversation> markConversationAsRead(
          {String? conversationRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(#markConversationAsRead, [],
                  {#conversationRemoteId: conversationRemoteId}),
              returnValue: Future<_i3.IUnifediApiConversation>.value(
                  _FakeIUnifediApiConversation()))
          as _i9.Future<_i3.IUnifediApiConversation>);
  @override
  _i9.Future<dynamic> deleteConversation({String? conversationRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(#deleteConversation, [],
              {#conversationRemoteId: conversationRemoteId}),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<List<_i3.IUnifediApiConversation>> getConversations(
          {_i11.IUnifediApiPagination? pagination,
          List<String>? recipientsIds}) =>
      (super.noSuchMethod(
              Invocation.method(#getConversations, [],
                  {#pagination: pagination, #recipientsIds: recipientsIds}),
              returnValue: Future<List<_i3.IUnifediApiConversation>>.value(
                  <_i3.IUnifediApiConversation>[]))
          as _i9.Future<List<_i3.IUnifediApiConversation>>);
  @override
  _i9.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
}

/// A class which mocks [IUnifediApiStatusService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiStatusService extends _i1.Mock
    implements _i12.IUnifediApiStatusService {
  MockIUnifediApiStatusService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
          returnValue: _FakeIRestService()) as _i2.IRestService);
  @override
  _i9.Stream<_i10.UnifediApiState> get unifediApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#unifediApiStateStream),
              returnValue: Stream<_i10.UnifediApiState>.empty())
          as _i9.Stream<_i10.UnifediApiState>);
  @override
  _i10.UnifediApiState get unifediApiState =>
      (super.noSuchMethod(Invocation.getter(#unifediApiState),
          returnValue: _i10.UnifediApiState.validAuth) as _i10.UnifediApiState);
  @override
  _i9.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i9.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  bool get isPleroma =>
      (super.noSuchMethod(Invocation.getter(#isPleroma), returnValue: false)
          as bool);
  @override
  bool get isMastodon =>
      (super.noSuchMethod(Invocation.getter(#isMastodon), returnValue: false)
          as bool);
  @override
  _i9.Future<_i4.IUnifediApiStatus> postStatus(
          {_i4.IUnifediApiPostStatus? data}) =>
      (super.noSuchMethod(Invocation.method(#postStatus, [], {#data: data}),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiScheduledStatus> scheduleStatus(
          {_i4.IUnifediApiSchedulePostStatus? data}) =>
      (super.noSuchMethod(Invocation.method(#scheduleStatus, [], {#data: data}),
              returnValue: Future<_i4.IUnifediApiScheduledStatus>.value(
                  _FakeIUnifediApiScheduledStatus()))
          as _i9.Future<_i4.IUnifediApiScheduledStatus>);
  @override
  _i9.Future<dynamic> deleteStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #deleteStatus, [], {#statusRemoteId: statusRemoteId}),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> muteStatus(
          {String? statusRemoteId, int? expireDurationInSeconds}) =>
      (super.noSuchMethod(
              Invocation.method(#muteStatus, [], {
                #statusRemoteId: statusRemoteId,
                #expireDurationInSeconds: expireDurationInSeconds
              }),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> unMuteStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unMuteStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> pinStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(#pinStatus, [], {#statusRemoteId: statusRemoteId}),
          returnValue: Future<_i4.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus())) as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> unPinStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unPinStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> favouriteStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #favouriteStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> unFavouriteStatus(
          {String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unFavouriteStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> bookmarkStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #bookmarkStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> unBookmarkStatus(
          {String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unBookmarkStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> reblogStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #reblogStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> unReblogStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unReblogStatus, [], {#statusRemoteId: statusRemoteId}),
              returnValue:
                  Future<_i4.IUnifediApiStatus>.value(_FakeIUnifediApiStatus()))
          as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<List<_i7.IUnifediApiAccount>> favouritedBy(
          {String? statusRemoteId,
          _i11.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#favouritedBy, [],
                  {#statusRemoteId: statusRemoteId, #pagination: pagination}),
              returnValue: Future<List<_i7.IUnifediApiAccount>>.value(
                  <_i7.IUnifediApiAccount>[]))
          as _i9.Future<List<_i7.IUnifediApiAccount>>);
  @override
  _i9.Future<List<_i7.IUnifediApiAccount>> rebloggedBy(
          {String? statusRemoteId,
          _i11.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#rebloggedBy, [],
                  {#statusRemoteId: statusRemoteId, #pagination: pagination}),
              returnValue: Future<List<_i7.IUnifediApiAccount>>.value(
                  <_i7.IUnifediApiAccount>[]))
          as _i9.Future<List<_i7.IUnifediApiAccount>>);
  @override
  _i9.Future<_i4.IUnifediApiStatus> getStatus({String? statusRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(#getStatus, [], {#statusRemoteId: statusRemoteId}),
          returnValue: Future<_i4.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus())) as _i9.Future<_i4.IUnifediApiStatus>);
  @override
  _i9.Future<_i5.IUnifediApiStatusContext> getStatusContext(
          {String? statusRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getStatusContext, [], {#statusRemoteId: statusRemoteId}),
              returnValue: Future<_i5.IUnifediApiStatusContext>.value(
                  _FakeIUnifediApiStatusContext()))
          as _i9.Future<_i5.IUnifediApiStatusContext>);
  @override
  _i9.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
}

/// A class which mocks [IUnifediApiMyAccountService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiMyAccountService extends _i1.Mock
    implements _i13.IUnifediApiMyAccountService {
  MockIUnifediApiMyAccountService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
          returnValue: _FakeIRestService()) as _i2.IRestService);
  @override
  _i9.Stream<_i10.UnifediApiState> get unifediApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#unifediApiStateStream),
              returnValue: Stream<_i10.UnifediApiState>.empty())
          as _i9.Stream<_i10.UnifediApiState>);
  @override
  _i10.UnifediApiState get unifediApiState =>
      (super.noSuchMethod(Invocation.getter(#unifediApiState),
          returnValue: _i10.UnifediApiState.validAuth) as _i10.UnifediApiState);
  @override
  _i9.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i9.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i9.Future<_i6.IUnifediApiMyAccount> updateCredentials(
          _i6.IUnifediApiEditMyAccount? accountEditData) =>
      (super.noSuchMethod(
              Invocation.method(#updateCredentials, [accountEditData]),
              returnValue: Future<_i6.IUnifediApiMyAccount>.value(
                  _FakeIUnifediApiMyAccount()))
          as _i9.Future<_i6.IUnifediApiMyAccount>);
  @override
  _i9.Future<_i6.IUnifediApiMyAccount> updateFiles(
          _i6.UnifediApiMyAccountFilesRequest? accountFilesRequest) =>
      (super.noSuchMethod(
              Invocation.method(#updateFiles, [accountFilesRequest]),
              returnValue: Future<_i6.IUnifediApiMyAccount>.value(
                  _FakeIUnifediApiMyAccount()))
          as _i9.Future<_i6.IUnifediApiMyAccount>);
  @override
  _i9.Future<_i6.IUnifediApiMyAccount> verifyCredentials() =>
      (super.noSuchMethod(Invocation.method(#verifyCredentials, []),
              returnValue: Future<_i6.IUnifediApiMyAccount>.value(
                  _FakeIUnifediApiMyAccount()))
          as _i9.Future<_i6.IUnifediApiMyAccount>);
  @override
  _i9.Future<List<String>> getDomainBlocks(
          {_i11.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getDomainBlocks, [], {#pagination: pagination}),
          returnValue:
              Future<List<String>>.value(<String>[])) as _i9
          .Future<List<String>>);
  @override
  _i9.Future<List<_i7.IUnifediApiAccount>> getAccountBlocks(
          {_i11.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getAccountBlocks, [], {#pagination: pagination}),
          returnValue: Future<List<_i7.IUnifediApiAccount>>.value(
              <_i7.IUnifediApiAccount>[])) as _i9
          .Future<List<_i7.IUnifediApiAccount>>);
  @override
  _i9.Future<List<_i7.IUnifediApiAccount>> getAccountMutes(
          {_i11.IUnifediApiPagination? pagination,
          bool? withRelationship}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountMutes, [], {
                #pagination: pagination,
                #withRelationship: withRelationship
              }),
              returnValue: Future<List<_i7.IUnifediApiAccount>>.value(
                  <_i7.IUnifediApiAccount>[]))
          as _i9.Future<List<_i7.IUnifediApiAccount>>);
  @override
  _i9.Future<List<_i4.IUnifediApiStatus>> getBookmarks(
          {_i11.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getBookmarks, [], {#pagination: pagination}),
              returnValue: Future<List<_i4.IUnifediApiStatus>>.value(
                  <_i4.IUnifediApiStatus>[]))
          as _i9.Future<List<_i4.IUnifediApiStatus>>);
  @override
  _i9.Future<List<_i4.IUnifediApiStatus>> getFavourites(
          {_i11.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getFavourites, [], {#pagination: pagination}),
              returnValue: Future<List<_i4.IUnifediApiStatus>>.value(
                  <_i4.IUnifediApiStatus>[]))
          as _i9.Future<List<_i4.IUnifediApiStatus>>);
  @override
  _i9.Future<List<_i7.IUnifediApiAccount>> getFollowRequests(
          {_i11.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getFollowRequests, [], {#pagination: pagination}),
          returnValue: Future<List<_i7.IUnifediApiAccount>>.value(
              <_i7.IUnifediApiAccount>[])) as _i9
          .Future<List<_i7.IUnifediApiAccount>>);
  @override
  _i9.Future<_i7.IUnifediApiAccountRelationship> acceptFollowRequest(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #acceptFollowRequest, [], {#accountRemoteId: accountRemoteId}),
          returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
              _FakeIUnifediApiAccountRelationship())) as _i9
          .Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i9.Future<_i7.IUnifediApiAccountRelationship> rejectFollowRequest(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #rejectFollowRequest, [], {#accountRemoteId: accountRemoteId}),
          returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
              _FakeIUnifediApiAccountRelationship())) as _i9
          .Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i9.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
}

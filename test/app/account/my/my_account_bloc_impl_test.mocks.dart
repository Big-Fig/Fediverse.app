// Mocks generated by Mockito 5.0.0-nullsafety.7 from annotations
// in fedi/test/app/account/my/my_account_bloc_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:fedi/pleroma/account/my/pleroma_my_account_model.dart' as _i3;
import 'package:fedi/pleroma/account/my/pleroma_my_account_service_impl.dart'
    as _i5;
import 'package:fedi/pleroma/account/pleroma_account_model.dart' as _i4;
import 'package:fedi/pleroma/api/pleroma_api_service.dart' as _i7;
import 'package:fedi/pleroma/pagination/pleroma_pagination_model.dart' as _i10;
import 'package:fedi/pleroma/rest/auth/pleroma_auth_rest_service.dart' as _i2;
import 'package:fedi/pleroma/status/pleroma_status_model.dart' as _i9;
import 'package:http/src/response.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeIPleromaAuthRestService extends _i1.Fake
    implements _i2.IPleromaAuthRestService {}

class _FakeIPleromaMyAccount extends _i1.Fake implements _i3.IPleromaMyAccount {
}

class _FakeIPleromaAccountRelationship extends _i1.Fake
    implements _i4.IPleromaAccountRelationship {}

/// A class which mocks [PleromaMyAccountService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPleromaMyAccountService extends _i1.Mock
    implements _i5.PleromaMyAccountService {
  MockPleromaMyAccountService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get verifyProfileRelativeUrlPath =>
      (super.noSuchMethod(Invocation.getter(#verifyProfileRelativeUrlPath),
          returnValue: '') as String);
  @override
  String get editProfileRelativeUrlPath =>
      (super.noSuchMethod(Invocation.getter(#editProfileRelativeUrlPath),
          returnValue: '') as String);
  @override
  _i2.IPleromaAuthRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
              returnValue: _FakeIPleromaAuthRestService())
          as _i2.IPleromaAuthRestService);
  @override
  _i6.Stream<_i7.PleromaApiState> get pleromaApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#pleromaApiStateStream),
              returnValue: Stream<_i7.PleromaApiState>.empty())
          as _i6.Stream<_i7.PleromaApiState>);
  @override
  _i7.PleromaApiState get pleromaApiState =>
      (super.noSuchMethod(Invocation.getter(#pleromaApiState),
          returnValue: _i7.PleromaApiState.validAuth) as _i7.PleromaApiState);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  _i6.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i6.Stream<bool>);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set isDisposed(bool? _isDisposed) =>
      super.noSuchMethod(Invocation.setter(#isDisposed, _isDisposed),
          returnValueForMissingStub: null);
  @override
  _i3.IPleromaMyAccount parseMyAccountResponse(_i8.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseMyAccountResponse, [httpResponse]),
          returnValue: _FakeIPleromaMyAccount()) as _i3.IPleromaMyAccount);
  @override
  _i4.IPleromaAccountRelationship parseAccountRelationshipResponse(
          _i8.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseAccountRelationshipResponse, [httpResponse]),
          returnValue:
              _FakeIPleromaAccountRelationship()) as _i4
          .IPleromaAccountRelationship);
  @override
  List<_i9.IPleromaStatus> parseStatusListResponse(
          _i8.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseStatusListResponse, [httpResponse]),
          returnValue: <_i9.IPleromaStatus>[]) as List<_i9.IPleromaStatus>);
  @override
  List<_i4.IPleromaAccount> parseAccountListResponse(
          _i8.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseAccountListResponse, [httpResponse]),
          returnValue: <_i4.IPleromaAccount>[]) as List<_i4.IPleromaAccount>);
  @override
  List<String> parseStringListResponse(_i8.Response? httpResponse) => (super
      .noSuchMethod(Invocation.method(#parseStringListResponse, [httpResponse]),
          returnValue: <String>[]) as List<String>);
  @override
  _i6.Future<_i3.IPleromaMyAccount> updateCredentials(
          _i3.IPleromaMyAccountEdit? data) =>
      (super.noSuchMethod(Invocation.method(#updateCredentials, [data]),
              returnValue: Future.value(_FakeIPleromaMyAccount()))
          as _i6.Future<_i3.IPleromaMyAccount>);
  @override
  _i6.Future<_i3.IPleromaMyAccount> updateFiles(
          _i3.PleromaMyAccountFilesRequest? accountFiles) =>
      (super.noSuchMethod(Invocation.method(#updateFiles, [accountFiles]),
              returnValue: Future.value(_FakeIPleromaMyAccount()))
          as _i6.Future<_i3.IPleromaMyAccount>);
  @override
  _i6.Future<_i3.IPleromaMyAccount> verifyCredentials() =>
      (super.noSuchMethod(Invocation.method(#verifyCredentials, []),
              returnValue: Future.value(_FakeIPleromaMyAccount()))
          as _i6.Future<_i3.IPleromaMyAccount>);
  @override
  _i6.Future<List<_i9.IPleromaStatus>> getBookmarks(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getBookmarks, [], {#pagination: pagination}),
              returnValue: Future.value(<_i9.IPleromaStatus>[]))
          as _i6.Future<List<_i9.IPleromaStatus>>);
  @override
  _i6.Future<List<_i9.IPleromaStatus>> getFavourites(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getFavourites, [], {#pagination: pagination}),
              returnValue: Future.value(<_i9.IPleromaStatus>[]))
          as _i6.Future<List<_i9.IPleromaStatus>>);
  @override
  _i6.Future<List<_i4.IPleromaAccount>> getFollowRequests(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getFollowRequests, [], {#pagination: pagination}),
          returnValue:
              Future.value(<_i4.IPleromaAccount>[])) as _i6
          .Future<List<_i4.IPleromaAccount>>);
  @override
  _i6.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future.value(null)) as _i6.Future<dynamic>);
  @override
  _i6.Future<_i4.IPleromaAccountRelationship> acceptFollowRequest(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(#acceptFollowRequest, [],
                  {#accountRemoteId: accountRemoteId}),
              returnValue: Future.value(_FakeIPleromaAccountRelationship()))
          as _i6.Future<_i4.IPleromaAccountRelationship>);
  @override
  _i6.Future<_i4.IPleromaAccountRelationship> rejectFollowRequest(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(#rejectFollowRequest, [],
                  {#accountRemoteId: accountRemoteId}),
              returnValue: Future.value(_FakeIPleromaAccountRelationship()))
          as _i6.Future<_i4.IPleromaAccountRelationship>);
  @override
  _i6.Future<List<String>> getDomainBlocks(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getDomainBlocks, [], {#pagination: pagination}),
          returnValue: Future.value(<String>[])) as _i6.Future<List<String>>);
  @override
  _i6.Future<List<_i4.IPleromaAccount>> getAccountBlocks(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getAccountBlocks, [], {#pagination: pagination}),
          returnValue:
              Future.value(<_i4.IPleromaAccount>[])) as _i6
          .Future<List<_i4.IPleromaAccount>>);
  @override
  _i6.Future<List<_i4.IPleromaAccount>> getAccountMutes(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getAccountMutes, [], {#pagination: pagination}),
          returnValue:
              Future.value(<_i4.IPleromaAccount>[])) as _i6
          .Future<List<_i4.IPleromaAccount>>);
}

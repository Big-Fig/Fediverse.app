// Mocks generated by Mockito 5.0.10 from annotations
// in fedi/test/app/chat/message/chat_message_bloc_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i12;

import 'package:connectivity_platform_interface/src/enums.dart' as _i30;
import 'package:easy_dispose/src/composite_disposable.dart' as _i24;
import 'package:easy_dispose/src/disposable.dart' as _i25;
import 'package:fedi/app/account/account_model.dart' as _i10;
import 'package:fedi/app/account/my/my_account_bloc.dart' as _i21;
import 'package:fedi/app/account/my/my_account_model.dart' as _i22;
import 'package:fedi/app/auth/instance/auth_instance_model.dart' as _i9;
import 'package:fedi/app/chat/message/chat_message_model.dart' as _i28;
import 'package:fedi/app/instance/location/instance_location_model.dart'
    as _i23;
import 'package:fedi/app/status/status_model.dart' as _i26;
import 'package:fedi/connection/connection_service.dart' as _i29;
import 'package:mockito/mockito.dart' as _i1;
import 'package:unifedi_api/src/api/account/identity_proof/unifedi_api_account_identity_proof_model.dart'
    as _i19;
import 'package:unifedi_api/src/api/account/my/unifedi_api_my_account_model.dart'
    as _i27;
import 'package:unifedi_api/src/api/account/register/unifedi_api_register_account_model.dart'
    as _i20;
import 'package:unifedi_api/src/api/account/relationship/unifedi_api_account_relationship_model.dart'
    as _i7;
import 'package:unifedi_api/src/api/account/service/unifedi_api_account_service.dart'
    as _i15;
import 'package:unifedi_api/src/api/account/unifedi_api_account_model.dart'
    as _i6;
import 'package:unifedi_api/src/api/chat/message/post/unifedi_api_post_chat_message_model.dart'
    as _i14;
import 'package:unifedi_api/src/api/chat/message/unifedi_api_chat_message_model.dart'
    as _i5;
import 'package:unifedi_api/src/api/chat/service/unifedi_api_chat_service.dart'
    as _i11;
import 'package:unifedi_api/src/api/chat/unifedi_api_chat_model.dart' as _i4;
import 'package:unifedi_api/src/api/feature/unifedi_api_feature_model.dart'
    as _i2;
import 'package:unifedi_api/src/api/list/unifedi_api_list_model.dart' as _i18;
import 'package:unifedi_api/src/api/oauth/unifedi_api_oauth_model.dart' as _i8;
import 'package:unifedi_api/src/api/pagination/unifedi_api_pagination_model.dart'
    as _i13;
import 'package:unifedi_api/src/api/rest/unifedi_api_rest_service.dart' as _i3;
import 'package:unifedi_api/src/api/status/unifedi_api_status_model.dart'
    as _i16;
import 'package:unifedi_api/src/api/visibility/unifedi_api_visibility_sealed.dart'
    as _i17;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeIUnifediApiFeature extends _i1.Fake
    implements _i2.IUnifediApiFeature {}

class _FakeIUnifediApiRestService extends _i1.Fake
    implements _i3.IUnifediApiRestService {}

class _FakeIUnifediApiChat extends _i1.Fake implements _i4.IUnifediApiChat {}

class _FakeIUnifediApiChatMessage extends _i1.Fake
    implements _i5.IUnifediApiChatMessage {}

class _FakeIUnifediApiAccount extends _i1.Fake
    implements _i6.IUnifediApiAccount {}

class _FakeIUnifediApiAccountRelationship extends _i1.Fake
    implements _i7.IUnifediApiAccountRelationship {}

class _FakeIUnifediApiOAuthToken extends _i1.Fake
    implements _i8.IUnifediApiOAuthToken {}

class _FakeUnifediApiAccess extends _i1.Fake implements _i9.UnifediApiAccess {
  @override
  String toString() => super.toString();
}

class _FakeIAccount extends _i1.Fake implements _i10.IAccount {}

/// A class which mocks [IUnifediApiChatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiChatService extends _i1.Mock
    implements _i11.IUnifediApiChatService {
  MockIUnifediApiChatService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUnifediApiFeature get getChatsFeature =>
      (super.noSuchMethod(Invocation.getter(#getChatsFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getChatMessagesFeature =>
      (super.noSuchMethod(Invocation.getter(#getChatMessagesFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get markChatAsReadFeature =>
      (super.noSuchMethod(Invocation.getter(#markChatAsReadFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getChatFeature =>
      (super.noSuchMethod(Invocation.getter(#getChatFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getOrCreateChatByAccountIdFeature =>
      (super.noSuchMethod(Invocation.getter(#getOrCreateChatByAccountIdFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get sendMessageFeature =>
      (super.noSuchMethod(Invocation.getter(#sendMessageFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get deleteChatMessageFeature =>
      (super.noSuchMethod(Invocation.getter(#deleteChatMessageFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i3.IUnifediApiRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
              returnValue: _FakeIUnifediApiRestService())
          as _i3.IUnifediApiRestService);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i12.Future<List<_i4.IUnifediApiChat>> getChats(
          {_i13.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getChats, [], {#pagination: pagination}),
              returnValue: Future<List<_i4.IUnifediApiChat>>.value(
                  <_i4.IUnifediApiChat>[]))
          as _i12.Future<List<_i4.IUnifediApiChat>>);
  @override
  _i12.Future<List<_i5.IUnifediApiChatMessage>> getChatMessages(
          {String? chatId, _i13.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getChatMessages, [], {#chatId: chatId, #pagination: pagination}),
          returnValue: Future<List<_i5.IUnifediApiChatMessage>>.value(
              <_i5.IUnifediApiChatMessage>[])) as _i12
          .Future<List<_i5.IUnifediApiChatMessage>>);
  @override
  _i12.Future<_i4.IUnifediApiChat> markChatAsRead(
          {String? chatId, String? lastReadChatMessageId}) =>
      (super.noSuchMethod(
              Invocation.method(#markChatAsRead, [], {
                #chatId: chatId,
                #lastReadChatMessageId: lastReadChatMessageId
              }),
              returnValue:
                  Future<_i4.IUnifediApiChat>.value(_FakeIUnifediApiChat()))
          as _i12.Future<_i4.IUnifediApiChat>);
  @override
  _i12.Future<_i4.IUnifediApiChat> getChat({String? id}) =>
      (super.noSuchMethod(Invocation.method(#getChat, [], {#id: id}),
              returnValue:
                  Future<_i4.IUnifediApiChat>.value(_FakeIUnifediApiChat()))
          as _i12.Future<_i4.IUnifediApiChat>);
  @override
  _i12.Future<_i4.IUnifediApiChat> getOrCreateChatByAccountId(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getOrCreateChatByAccountId, [], {#accountId: accountId}),
              returnValue:
                  Future<_i4.IUnifediApiChat>.value(_FakeIUnifediApiChat()))
          as _i12.Future<_i4.IUnifediApiChat>);
  @override
  _i12.Future<_i5.IUnifediApiChatMessage> sendMessage(
          {String? idempotencyKey,
          String? chatId,
          _i14.IUnifediApiPostChatMessage? postChatMessage}) =>
      (super.noSuchMethod(
              Invocation.method(#sendMessage, [], {
                #idempotencyKey: idempotencyKey,
                #chatId: chatId,
                #postChatMessage: postChatMessage
              }),
              returnValue: Future<_i5.IUnifediApiChatMessage>.value(
                  _FakeIUnifediApiChatMessage()))
          as _i12.Future<_i5.IUnifediApiChatMessage>);
  @override
  _i12.Future<dynamic> deleteChatMessage(
          {String? chatMessageId, String? chatId}) =>
      (super.noSuchMethod(
          Invocation.method(#deleteChatMessage, [],
              {#chatMessageId: chatMessageId, #chatId: chatId}),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
}

/// A class which mocks [IUnifediApiAccountService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiAccountService extends _i1.Mock
    implements _i15.IUnifediApiAccountService {
  MockIUnifediApiAccountService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUnifediApiFeature get getAccountStatusesFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountStatusesFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesWithMutedFeature => (super
      .noSuchMethod(Invocation.getter(#getAccountStatusesWithMutedFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesExcludeVisibilitiesFeature =>
      (super.noSuchMethod(
          Invocation.getter(#getAccountStatusesExcludeVisibilitiesFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesPaginationMinIdFeature =>
      (super.noSuchMethod(
          Invocation.getter(#getAccountStatusesPaginationMinIdFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesExcludeReblogsFeature => (super
      .noSuchMethod(Invocation.getter(#getAccountStatusesExcludeReblogsFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesTaggedFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountStatusesTaggedFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFavouritedStatusesFeature => (super
      .noSuchMethod(Invocation.getter(#getAccountFavouritedStatusesFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountWithRelationshipFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountWithRelationshipFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getRelationshipWithAccountsFeature => (super
      .noSuchMethod(Invocation.getter(#getRelationshipWithAccountsFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get searchFeature =>
      (super.noSuchMethod(Invocation.getter(#searchFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getListsWithAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#getListsWithAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountIdentifyProofsFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountIdentifyProofsFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get followAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#followAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get followAccountNotifyFeature =>
      (super.noSuchMethod(Invocation.getter(#followAccountNotifyFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unFollowAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unFollowAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get pinAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#pinAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unPinAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unPinAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get muteAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#muteAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unMuteAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unMuteAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get subscribeAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#subscribeAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unSubscribeAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unSubscribeAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get blockAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#blockAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unBlockAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unBlockAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get blockDomainFeature =>
      (super.noSuchMethod(Invocation.getter(#blockDomainFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unBlockDomainFeature =>
      (super.noSuchMethod(Invocation.getter(#unBlockDomainFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get noteFeature =>
      (super.noSuchMethod(Invocation.getter(#noteFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get reportAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#reportAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get reportAccountForwardFeature =>
      (super.noSuchMethod(Invocation.getter(#reportAccountForwardFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFollowingsFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountFollowingsFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFollowersFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountFollowersFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFollowingsWithRelationshipFeature =>
      (super.noSuchMethod(
          Invocation.getter(#getAccountFollowingsWithRelationshipFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFollowersWithRelationshipFeature =>
      (super.noSuchMethod(
          Invocation.getter(#getAccountFollowersWithRelationshipFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountReasonFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountReasonFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountCaptchaFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountCaptchaFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountFullNameFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountFullNameFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountBioFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountBioFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountInviteTokenFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountInviteTokenFeature),
          returnValue: _FakeIUnifediApiFeature()) as _i2.IUnifediApiFeature);
  @override
  _i3.IUnifediApiRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
              returnValue: _FakeIUnifediApiRestService())
          as _i3.IUnifediApiRestService);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i12.Future<List<_i16.IUnifediApiStatus>> getAccountStatuses(
          {String? accountId,
          String? tagged,
          bool? pinned,
          bool? excludeReplies,
          bool? excludeReblogs,
          List<_i17.UnifediApiVisibility>? excludeVisibilities,
          bool? withMuted,
          bool? onlyWithMedia,
          _i13.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountStatuses, [], {
                #accountId: accountId,
                #tagged: tagged,
                #pinned: pinned,
                #excludeReplies: excludeReplies,
                #excludeReblogs: excludeReblogs,
                #excludeVisibilities: excludeVisibilities,
                #withMuted: withMuted,
                #onlyWithMedia: onlyWithMedia,
                #pagination: pagination
              }),
              returnValue: Future<List<_i16.IUnifediApiStatus>>.value(
                  <_i16.IUnifediApiStatus>[]))
          as _i12.Future<List<_i16.IUnifediApiStatus>>);
  @override
  List<_i17.UnifediApiVisibility>
      calculatePossibleExcludeVisibilitiesValues() => (super.noSuchMethod(
          Invocation.method(#calculatePossibleExcludeVisibilitiesValues, []),
          returnValue: <
              _i17.UnifediApiVisibility>[]) as List<_i17.UnifediApiVisibility>);
  @override
  _i12.Future<List<_i16.IUnifediApiStatus>> getAccountFavouritedStatuses(
          {String? accountId, _i13.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountFavouritedStatuses, [],
                  {#accountId: accountId, #pagination: pagination}),
              returnValue: Future<List<_i16.IUnifediApiStatus>>.value(
                  <_i16.IUnifediApiStatus>[]))
          as _i12.Future<List<_i16.IUnifediApiStatus>>);
  @override
  _i12.Future<_i6.IUnifediApiAccount> getAccount(
          {String? accountId, bool? withRelationship}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccount, [],
                  {#accountId: accountId, #withRelationship: withRelationship}),
              returnValue: Future<_i6.IUnifediApiAccount>.value(
                  _FakeIUnifediApiAccount()))
          as _i12.Future<_i6.IUnifediApiAccount>);
  @override
  _i12.Future<List<_i7.IUnifediApiAccountRelationship>>
      getRelationshipWithAccounts({List<String>? accountIds}) =>
          (super.noSuchMethod(
              Invocation.method(
                  #getRelationshipWithAccounts, [], {#accountIds: accountIds}),
              returnValue:
                  Future<List<_i7.IUnifediApiAccountRelationship>>.value(
                      <_i7.IUnifediApiAccountRelationship>[])) as _i12
              .Future<List<_i7.IUnifediApiAccountRelationship>>);
  @override
  _i12.Future<List<_i6.IUnifediApiAccount>> search(
          {String? query, bool? resolve, bool? following, int? limit}) =>
      (super.noSuchMethod(
              Invocation.method(#search, [], {
                #query: query,
                #resolve: resolve,
                #following: following,
                #limit: limit
              }),
              returnValue: Future<List<_i6.IUnifediApiAccount>>.value(
                  <_i6.IUnifediApiAccount>[]))
          as _i12.Future<List<_i6.IUnifediApiAccount>>);
  @override
  _i12.Future<List<_i18.IUnifediApiList>> getListsWithAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
          Invocation.method(#getListsWithAccount, [], {#accountId: accountId}),
          returnValue: Future<List<_i18.IUnifediApiList>>.value(
              <_i18.IUnifediApiList>[])) as _i12
          .Future<List<_i18.IUnifediApiList>>);
  @override
  _i12.Future<List<_i19.IUnifediApiAccountIdentityProof>>
      getAccountIdentifyProofs({String? accountId}) => (super.noSuchMethod(
          Invocation.method(
              #getAccountIdentifyProofs, [], {#accountId: accountId}),
          returnValue: Future<List<_i19.IUnifediApiAccountIdentityProof>>.value(
              <_i19.IUnifediApiAccountIdentityProof>[])) as _i12
          .Future<List<_i19.IUnifediApiAccountIdentityProof>>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> followAccount(
          {String? accountId, bool? notify, bool? reblogs}) =>
      (super.noSuchMethod(
              Invocation.method(#followAccount, [],
                  {#accountId: accountId, #notify: notify, #reblogs: reblogs}),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> unFollowAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#unFollowAccount, [], {#accountId: accountId}),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> subscribeAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#subscribeAccount, [], {#accountId: accountId}),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> unSubscribeAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
          Invocation.method(#unSubscribeAccount, [], {#accountId: accountId}),
          returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
              _FakeIUnifediApiAccountRelationship())) as _i12
          .Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> pinAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#pinAccount, [], {#accountId: accountId}),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> unPinAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#unPinAccount, [], {#accountId: accountId}),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> muteAccount(
          {String? accountId, bool? notifications, Duration? expireIn}) =>
      (super.noSuchMethod(
              Invocation.method(#muteAccount, [], {
                #accountId: accountId,
                #notifications: notifications,
                #expireIn: expireIn
              }),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> unMuteAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#unMuteAccount, [], {#accountId: accountId}),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> blockAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#blockAccount, [], {#accountId: accountId}),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> unBlockAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#unBlockAccount, [], {#accountId: accountId}),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<dynamic> blockDomain({String? domain}) => (super.noSuchMethod(
      Invocation.method(#blockDomain, [], {#domain: domain}),
      returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> unBlockDomain({String? domain}) => (super.noSuchMethod(
      Invocation.method(#unBlockDomain, [], {#domain: domain}),
      returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> reportAccount(
          {String? accountId,
          List<String>? statusIds,
          String? comment,
          bool? forward}) =>
      (super.noSuchMethod(
          Invocation.method(#reportAccount, [], {
            #accountId: accountId,
            #statusIds: statusIds,
            #comment: comment,
            #forward: forward
          }),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<List<_i6.IUnifediApiAccount>> getAccountFollowings(
          {String? accountId,
          bool? withRelationship,
          _i13.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountFollowings, [], {
                #accountId: accountId,
                #withRelationship: withRelationship,
                #pagination: pagination
              }),
              returnValue: Future<List<_i6.IUnifediApiAccount>>.value(
                  <_i6.IUnifediApiAccount>[]))
          as _i12.Future<List<_i6.IUnifediApiAccount>>);
  @override
  _i12.Future<List<_i6.IUnifediApiAccount>> getAccountFollowers(
          {String? accountId,
          bool? withRelationship,
          _i13.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountFollowers, [], {
                #accountId: accountId,
                #withRelationship: withRelationship,
                #pagination: pagination
              }),
              returnValue: Future<List<_i6.IUnifediApiAccount>>.value(
                  <_i6.IUnifediApiAccount>[]))
          as _i12.Future<List<_i6.IUnifediApiAccount>>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> note(
          {String? accountId, String? comment}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #note, [], {#accountId: accountId, #comment: comment}),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i8.IUnifediApiOAuthToken> registerAccount(
          {_i20.IUnifediApiRegisterAccount? registerAccount}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #registerAccount, [], {#registerAccount: registerAccount}),
              returnValue: Future<_i8.IUnifediApiOAuthToken>.value(
                  _FakeIUnifediApiOAuthToken()))
          as _i12.Future<_i8.IUnifediApiOAuthToken>);
  @override
  _i12.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
}

/// A class which mocks [IMyAccountBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockIMyAccountBloc extends _i1.Mock implements _i21.IMyAccountBloc {
  MockIMyAccountBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Stream<_i22.IMyAccount?> get myAccountStream =>
      (super.noSuchMethod(Invocation.getter(#myAccountStream),
              returnValue: Stream<_i22.IMyAccount?>.empty())
          as _i12.Stream<_i22.IMyAccount?>);
  @override
  _i9.UnifediApiAccess get instance =>
      (super.noSuchMethod(Invocation.getter(#instance),
          returnValue: _FakeUnifediApiAccess()) as _i9.UnifediApiAccess);
  @override
  bool get isLocalCacheExist =>
      (super.noSuchMethod(Invocation.getter(#isLocalCacheExist),
          returnValue: false) as bool);
  @override
  _i10.IAccount get account => (super.noSuchMethod(Invocation.getter(#account),
      returnValue: _FakeIAccount()) as _i10.IAccount);
  @override
  _i12.Stream<_i10.IAccount> get accountStream =>
      (super.noSuchMethod(Invocation.getter(#accountStream),
              returnValue: Stream<_i10.IAccount>.empty())
          as _i12.Stream<_i10.IAccount>);
  @override
  _i23.InstanceLocation get instanceLocation =>
      (super.noSuchMethod(Invocation.getter(#instanceLocation),
          returnValue: _i23.InstanceLocation.local) as _i23.InstanceLocation);
  @override
  _i24.DisposeOrder get disposeOrder =>
      (super.noSuchMethod(Invocation.getter(#disposeOrder),
          returnValue: _i24.DisposeOrder.lifo) as _i24.DisposeOrder);
  @override
  bool get catchExceptions => (super
          .noSuchMethod(Invocation.getter(#catchExceptions), returnValue: false)
      as bool);
  @override
  List<_i25.IDisposable> get disposables =>
      (super.noSuchMethod(Invocation.getter(#disposables),
          returnValue: <_i25.IDisposable>[]) as List<_i25.IDisposable>);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set isDisposed(bool? _isDisposed) =>
      super.noSuchMethod(Invocation.setter(#isDisposed, _isDisposed),
          returnValueForMissingStub: null);
  @override
  bool checkAccountIsMe(_i10.IAccount? account) =>
      (super.noSuchMethod(Invocation.method(#checkAccountIsMe, [account]),
          returnValue: false) as bool);
  @override
  bool checkIsStatusFromMe(_i26.IStatus? status) =>
      (super.noSuchMethod(Invocation.method(#checkIsStatusFromMe, [status]),
          returnValue: false) as bool);
  @override
  _i12.Future<dynamic> updateMyAccountByMyUnifediApiAccount(
          _i27.IUnifediApiMyAccount? unifediApiMyAccount) =>
      (super.noSuchMethod(
          Invocation.method(
              #updateMyAccountByMyUnifediApiAccount, [unifediApiMyAccount]),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> updateMyAccountByMyAccount(_i22.IMyAccount? myAccount) =>
      (super.noSuchMethod(
          Invocation.method(#updateMyAccountByMyAccount, [myAccount]),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> decreaseFollowingRequestCount() =>
      (super.noSuchMethod(Invocation.method(#decreaseFollowingRequestCount, []),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  bool checkIsChatMessageFromMe(_i28.IChatMessage? chatMessage) => (super
      .noSuchMethod(Invocation.method(#checkIsChatMessageFromMe, [chatMessage]),
          returnValue: false) as bool);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> toggleFollow() =>
      (super.noSuchMethod(Invocation.method(#toggleFollow, []),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> toggleMute() =>
      (super.noSuchMethod(Invocation.method(#toggleMute, []),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> mute(
          {bool? notifications, Duration? duration}) =>
      (super.noSuchMethod(
          Invocation.method(
              #mute, [], {#notifications: notifications, #duration: duration}),
          returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
              _FakeIUnifediApiAccountRelationship())) as _i12
          .Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> unMute() =>
      (super.noSuchMethod(Invocation.method(#unMute, []),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> subscribe() =>
      (super.noSuchMethod(Invocation.method(#subscribe, []),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> unSubscribe() =>
      (super.noSuchMethod(Invocation.method(#unSubscribe, []),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> togglePin() =>
      (super.noSuchMethod(Invocation.method(#togglePin, []),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> toggleBlock() =>
      (super.noSuchMethod(Invocation.method(#toggleBlock, []),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> toggleSubscribe() =>
      (super.noSuchMethod(Invocation.method(#toggleSubscribe, []),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<_i7.IUnifediApiAccountRelationship> toggleBlockDomain() =>
      (super.noSuchMethod(Invocation.method(#toggleBlockDomain, []),
              returnValue: Future<_i7.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship()))
          as _i12.Future<_i7.IUnifediApiAccountRelationship>);
  @override
  _i12.Future<dynamic> refreshFromNetwork({bool? isNeedPreFetchRelationship}) =>
      (super.noSuchMethod(
          Invocation.method(#refreshFromNetwork, [],
              {#isNeedPreFetchRelationship: isNeedPreFetchRelationship}),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  void addDisposable(_i25.IDisposable? disposable) =>
      super.noSuchMethod(Invocation.method(#addDisposable, [disposable]),
          returnValueForMissingStub: null);
  @override
  void addDisposables(Iterable<_i25.IDisposable>? disposables) =>
      super.noSuchMethod(Invocation.method(#addDisposables, [disposables]),
          returnValueForMissingStub: null);
  @override
  _i12.Future<dynamic> performDispose() =>
      (super.noSuchMethod(Invocation.method(#performDispose, []),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
}

/// A class which mocks [IConnectionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIConnectionService extends _i1.Mock
    implements _i29.IConnectionService {
  MockIConnectionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Stream<_i30.ConnectivityResult> get connectionStateStream =>
      (super.noSuchMethod(Invocation.getter(#connectionStateStream),
              returnValue: Stream<_i30.ConnectivityResult>.empty())
          as _i12.Stream<_i30.ConnectivityResult>);
  @override
  _i12.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i12.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  _i24.DisposeOrder get disposeOrder =>
      (super.noSuchMethod(Invocation.getter(#disposeOrder),
          returnValue: _i24.DisposeOrder.lifo) as _i24.DisposeOrder);
  @override
  bool get catchExceptions => (super
          .noSuchMethod(Invocation.getter(#catchExceptions), returnValue: false)
      as bool);
  @override
  List<_i25.IDisposable> get disposables =>
      (super.noSuchMethod(Invocation.getter(#disposables),
          returnValue: <_i25.IDisposable>[]) as List<_i25.IDisposable>);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set isDisposed(bool? _isDisposed) =>
      super.noSuchMethod(Invocation.setter(#isDisposed, _isDisposed),
          returnValueForMissingStub: null);
  @override
  _i12.Future<dynamic> internalAsyncInit() =>
      (super.noSuchMethod(Invocation.method(#internalAsyncInit, []),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  void addDisposable(_i25.IDisposable? disposable) =>
      super.noSuchMethod(Invocation.method(#addDisposable, [disposable]),
          returnValueForMissingStub: null);
  @override
  void addDisposables(Iterable<_i25.IDisposable>? disposables) =>
      super.noSuchMethod(Invocation.method(#addDisposables, [disposables]),
          returnValueForMissingStub: null);
  @override
  _i12.Future<dynamic> performDispose() =>
      (super.noSuchMethod(Invocation.method(#performDispose, []),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i12.Future<dynamic>);
}

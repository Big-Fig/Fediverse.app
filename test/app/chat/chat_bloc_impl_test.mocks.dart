// Mocks generated by Mockito 5.0.10 from annotations
// in fedi/test/app/chat/chat_bloc_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:base_fediverse_api/src/rest/rest_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pleroma_fediverse_api/src/pleroma/api/account/my/pleroma_api_my_account_model.dart'
    as _i4;
import 'package:pleroma_fediverse_api/src/pleroma/api/account/my/pleroma_api_my_account_service.dart'
    as _i10;
import 'package:pleroma_fediverse_api/src/pleroma/api/account/pleroma_api_account_model.dart'
    as _i5;
import 'package:pleroma_fediverse_api/src/pleroma/api/chat/pleroma_api_chat_model.dart'
    as _i3;
import 'package:pleroma_fediverse_api/src/pleroma/api/chat/pleroma_api_chat_service.dart'
    as _i6;
import 'package:pleroma_fediverse_api/src/pleroma/api/pagination/pleroma_api_pagination_model.dart'
    as _i9;
import 'package:pleroma_fediverse_api/src/pleroma/api/pleroma_api_service.dart'
    as _i8;
import 'package:pleroma_fediverse_api/src/pleroma/api/status/pleroma_api_status_model.dart'
    as _i11;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeIRestService extends _i1.Fake implements _i2.IRestService {}

class _FakeIUnifediApiChat extends _i1.Fake implements _i3.IUnifediApiChat {}

class _FakeIUnifediApiChatMessage extends _i1.Fake
    implements _i3.IUnifediApiChatMessage {}

class _FakeIUnifediApiMyAccount extends _i1.Fake
    implements _i4.IUnifediApiMyAccount {}

class _FakeIUnifediApiAccountRelationship extends _i1.Fake
    implements _i5.IUnifediApiAccountRelationship {}

/// A class which mocks [IUnifediApiChatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiChatService extends _i1.Mock
    implements _i6.IUnifediApiChatService {
  MockIUnifediApiChatService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isPleroma =>
      (super.noSuchMethod(Invocation.getter(#isPleroma), returnValue: false)
          as bool);
  @override
  bool get isMastodon =>
      (super.noSuchMethod(Invocation.getter(#isMastodon), returnValue: false)
          as bool);
  @override
  _i2.IRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
          returnValue: _FakeIRestService()) as _i2.IRestService);
  @override
  _i7.Stream<_i8.UnifediApiState> get unifediApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#unifediApiStateStream),
              returnValue: Stream<_i8.UnifediApiState>.empty())
          as _i7.Stream<_i8.UnifediApiState>);
  @override
  _i8.UnifediApiState get unifediApiState =>
      (super.noSuchMethod(Invocation.getter(#unifediApiState),
          returnValue: _i8.UnifediApiState.validAuth) as _i8.UnifediApiState);
  @override
  _i7.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i7.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i7.Future<List<_i3.IUnifediApiChat>> getChats(
          {_i9.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getChats, [], {#pagination: pagination}),
              returnValue: Future<List<_i3.IUnifediApiChat>>.value(
                  <_i3.IUnifediApiChat>[]))
          as _i7.Future<List<_i3.IUnifediApiChat>>);
  @override
  _i7.Future<List<_i3.IUnifediApiChatMessage>> getChatMessages(
          {String? chatId, _i9.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getChatMessages, [], {#chatId: chatId, #pagination: pagination}),
          returnValue: Future<List<_i3.IUnifediApiChatMessage>>.value(
              <_i3.IUnifediApiChatMessage>[])) as _i7
          .Future<List<_i3.IUnifediApiChatMessage>>);
  @override
  _i7.Future<_i3.IUnifediApiChat> markChatAsRead(
          {String? chatId, String? lastReadChatMessageId}) =>
      (super.noSuchMethod(
              Invocation.method(#markChatAsRead, [], {
                #chatId: chatId,
                #lastReadChatMessageId: lastReadChatMessageId
              }),
              returnValue:
                  Future<_i3.IUnifediApiChat>.value(_FakeIUnifediApiChat()))
          as _i7.Future<_i3.IUnifediApiChat>);
  @override
  _i7.Future<_i3.IUnifediApiChat> getChat({String? id}) =>
      (super.noSuchMethod(Invocation.method(#getChat, [], {#id: id}),
              returnValue:
                  Future<_i3.IUnifediApiChat>.value(_FakeIUnifediApiChat()))
          as _i7.Future<_i3.IUnifediApiChat>);
  @override
  _i7.Future<_i3.IUnifediApiChat> getOrCreateChatByAccountId(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getOrCreateChatByAccountId, [], {#accountId: accountId}),
              returnValue:
                  Future<_i3.IUnifediApiChat>.value(_FakeIUnifediApiChat()))
          as _i7.Future<_i3.IUnifediApiChat>);
  @override
  _i7.Future<_i3.IUnifediApiChatMessage> sendMessage(
          {String? chatId, _i3.IUnifediApiPostChatMessage? data}) =>
      (super.noSuchMethod(
          Invocation.method(#sendMessage, [], {#chatId: chatId, #data: data}),
          returnValue: Future<_i3.IUnifediApiChatMessage>.value(
              _FakeIUnifediApiChatMessage())) as _i7
          .Future<_i3.IUnifediApiChatMessage>);
  @override
  _i7.Future<dynamic> deleteChatMessage(
          {String? chatMessageRemoteId, String? chatId}) =>
      (super.noSuchMethod(
          Invocation.method(#deleteChatMessage, [],
              {#chatMessageRemoteId: chatMessageRemoteId, #chatId: chatId}),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
  @override
  _i7.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
}

/// A class which mocks [IUnifediApiMyAccountService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiMyAccountService extends _i1.Mock
    implements _i10.IUnifediApiMyAccountService {
  MockIUnifediApiMyAccountService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
          returnValue: _FakeIRestService()) as _i2.IRestService);
  @override
  _i7.Stream<_i8.UnifediApiState> get unifediApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#unifediApiStateStream),
              returnValue: Stream<_i8.UnifediApiState>.empty())
          as _i7.Stream<_i8.UnifediApiState>);
  @override
  _i8.UnifediApiState get unifediApiState =>
      (super.noSuchMethod(Invocation.getter(#unifediApiState),
          returnValue: _i8.UnifediApiState.validAuth) as _i8.UnifediApiState);
  @override
  _i7.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i7.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i7.Future<_i4.IUnifediApiMyAccount> updateCredentials(
          _i4.IUnifediApiEditMyAccount? accountEditData) =>
      (super.noSuchMethod(
              Invocation.method(#updateCredentials, [accountEditData]),
              returnValue: Future<_i4.IUnifediApiMyAccount>.value(
                  _FakeIUnifediApiMyAccount()))
          as _i7.Future<_i4.IUnifediApiMyAccount>);
  @override
  _i7.Future<_i4.IUnifediApiMyAccount> updateFiles(
          _i4.UnifediApiMyAccountFilesRequest? accountFilesRequest) =>
      (super.noSuchMethod(
              Invocation.method(#updateFiles, [accountFilesRequest]),
              returnValue: Future<_i4.IUnifediApiMyAccount>.value(
                  _FakeIUnifediApiMyAccount()))
          as _i7.Future<_i4.IUnifediApiMyAccount>);
  @override
  _i7.Future<_i4.IUnifediApiMyAccount> verifyCredentials() =>
      (super.noSuchMethod(Invocation.method(#verifyCredentials, []),
              returnValue: Future<_i4.IUnifediApiMyAccount>.value(
                  _FakeIUnifediApiMyAccount()))
          as _i7.Future<_i4.IUnifediApiMyAccount>);
  @override
  _i7.Future<List<String>> getDomainBlocks(
          {_i9.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getDomainBlocks, [], {#pagination: pagination}),
          returnValue:
              Future<List<String>>.value(<String>[])) as _i7
          .Future<List<String>>);
  @override
  _i7.Future<List<_i5.IUnifediApiAccount>> getAccountBlocks(
          {_i9.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getAccountBlocks, [], {#pagination: pagination}),
          returnValue: Future<List<_i5.IUnifediApiAccount>>.value(
              <_i5.IUnifediApiAccount>[])) as _i7
          .Future<List<_i5.IUnifediApiAccount>>);
  @override
  _i7.Future<List<_i5.IUnifediApiAccount>> getAccountMutes(
          {_i9.IUnifediApiPagination? pagination,
          bool? withRelationship}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountMutes, [], {
                #pagination: pagination,
                #withRelationship: withRelationship
              }),
              returnValue: Future<List<_i5.IUnifediApiAccount>>.value(
                  <_i5.IUnifediApiAccount>[]))
          as _i7.Future<List<_i5.IUnifediApiAccount>>);
  @override
  _i7.Future<List<_i11.IUnifediApiStatus>> getBookmarks(
          {_i9.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getBookmarks, [], {#pagination: pagination}),
              returnValue: Future<List<_i11.IUnifediApiStatus>>.value(
                  <_i11.IUnifediApiStatus>[]))
          as _i7.Future<List<_i11.IUnifediApiStatus>>);
  @override
  _i7.Future<List<_i11.IUnifediApiStatus>> getFavourites(
          {_i9.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getFavourites, [], {#pagination: pagination}),
              returnValue: Future<List<_i11.IUnifediApiStatus>>.value(
                  <_i11.IUnifediApiStatus>[]))
          as _i7.Future<List<_i11.IUnifediApiStatus>>);
  @override
  _i7.Future<List<_i5.IUnifediApiAccount>> getFollowRequests(
          {_i9.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getFollowRequests, [], {#pagination: pagination}),
          returnValue: Future<List<_i5.IUnifediApiAccount>>.value(
              <_i5.IUnifediApiAccount>[])) as _i7
          .Future<List<_i5.IUnifediApiAccount>>);
  @override
  _i7.Future<_i5.IUnifediApiAccountRelationship> acceptFollowRequest(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #acceptFollowRequest, [], {#accountRemoteId: accountRemoteId}),
          returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
              _FakeIUnifediApiAccountRelationship())) as _i7
          .Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i7.Future<_i5.IUnifediApiAccountRelationship> rejectFollowRequest(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #rejectFollowRequest, [], {#accountRemoteId: accountRemoteId}),
          returnValue: Future<_i5.IUnifediApiAccountRelationship>.value(
              _FakeIUnifediApiAccountRelationship())) as _i7
          .Future<_i5.IUnifediApiAccountRelationship>);
  @override
  _i7.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
}

// Mocks generated by Mockito 5.0.0-nullsafety.7 from annotations
// in fedi/test/app/chat/chat_bloc_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:fedi/pleroma/account/my/pleroma_my_account_model.dart' as _i4;
import 'package:fedi/pleroma/account/my/pleroma_my_account_service_impl.dart'
    as _i11;
import 'package:fedi/pleroma/account/pleroma_account_model.dart' as _i5;
import 'package:fedi/pleroma/api/pleroma_api_service.dart' as _i8;
import 'package:fedi/pleroma/chat/pleroma_chat_model.dart' as _i3;
import 'package:fedi/pleroma/chat/pleroma_chat_service_impl.dart' as _i6;
import 'package:fedi/pleroma/pagination/pleroma_pagination_model.dart' as _i10;
import 'package:fedi/pleroma/rest/auth/pleroma_auth_rest_service.dart' as _i2;
import 'package:fedi/pleroma/status/pleroma_status_model.dart' as _i12;
import 'package:http/src/response.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeIPleromaAuthRestService extends _i1.Fake
    implements _i2.IPleromaAuthRestService {}

class _FakeIPleromaChat extends _i1.Fake implements _i3.IPleromaChat {}

class _FakeIPleromaChatMessage extends _i1.Fake
    implements _i3.IPleromaChatMessage {}

class _FakeIPleromaMyAccount extends _i1.Fake implements _i4.IPleromaMyAccount {
}

class _FakeIPleromaAccountRelationship extends _i1.Fake
    implements _i5.IPleromaAccountRelationship {}

/// A class which mocks [PleromaChatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPleromaChatService extends _i1.Mock
    implements _i6.PleromaChatService {
  MockPleromaChatService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get chatRelativeUrlPath =>
      (super.noSuchMethod(Invocation.getter(#chatRelativeUrlPath),
          returnValue: '') as String);
  @override
  _i2.IPleromaAuthRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
              returnValue: _FakeIPleromaAuthRestService())
          as _i2.IPleromaAuthRestService);
  @override
  _i7.Stream<_i8.PleromaApiState> get pleromaApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#pleromaApiStateStream),
              returnValue: Stream<_i8.PleromaApiState>.empty())
          as _i7.Stream<_i8.PleromaApiState>);
  @override
  _i8.PleromaApiState get pleromaApiState =>
      (super.noSuchMethod(Invocation.getter(#pleromaApiState),
          returnValue: _i8.PleromaApiState.validAuth) as _i8.PleromaApiState);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  _i7.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i7.Stream<bool>);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set isDisposed(bool? _isDisposed) =>
      super.noSuchMethod(Invocation.setter(#isDisposed, _isDisposed),
          returnValueForMissingStub: null);
  @override
  List<_i3.IPleromaChat> parseChatListResponse(_i9.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseChatListResponse, [httpResponse]),
          returnValue: <_i3.IPleromaChat>[]) as List<_i3.IPleromaChat>);
  @override
  _i3.IPleromaChat parseChatResponse(_i9.Response? httpResponse) =>
      (super.noSuchMethod(Invocation.method(#parseChatResponse, [httpResponse]),
          returnValue: _FakeIPleromaChat()) as _i3.IPleromaChat);
  @override
  List<_i3.IPleromaChatMessage> parseChatMessageListResponse(
          _i9.Response? httpResponse) =>
      (super.noSuchMethod(
              Invocation.method(#parseChatMessageListResponse, [httpResponse]),
              returnValue: <_i3.IPleromaChatMessage>[])
          as List<_i3.IPleromaChatMessage>);
  @override
  _i3.IPleromaChatMessage parseChatMessageResponse(
          _i9.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseChatMessageResponse, [httpResponse]),
          returnValue: _FakeIPleromaChatMessage()) as _i3.IPleromaChatMessage);
  @override
  _i7.Future<List<_i3.IPleromaChat>> getChats(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getChats, [], {#pagination: pagination}),
              returnValue: Future.value(<_i3.IPleromaChat>[]))
          as _i7.Future<List<_i3.IPleromaChat>>);
  @override
  _i7.Future<List<_i3.IPleromaChatMessage>> getChatMessages(
          {String? chatId, _i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getChatMessages, [],
                  {#chatId: chatId, #pagination: pagination}),
              returnValue: Future.value(<_i3.IPleromaChatMessage>[]))
          as _i7.Future<List<_i3.IPleromaChatMessage>>);
  @override
  _i7.Future<_i3.IPleromaChat> markChatAsRead(
          {String? chatId, String? lastReadChatMessageId}) =>
      (super.noSuchMethod(
              Invocation.method(#markChatAsRead, [], {
                #chatId: chatId,
                #lastReadChatMessageId: lastReadChatMessageId
              }),
              returnValue: Future.value(_FakeIPleromaChat()))
          as _i7.Future<_i3.IPleromaChat>);
  @override
  _i7.Future<_i3.IPleromaChat> getOrCreateChatByAccountId(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getOrCreateChatByAccountId, [], {#accountId: accountId}),
              returnValue: Future.value(_FakeIPleromaChat()))
          as _i7.Future<_i3.IPleromaChat>);
  @override
  _i7.Future<_i3.IPleromaChat> getChat({String? id}) =>
      (super.noSuchMethod(Invocation.method(#getChat, [], {#id: id}),
              returnValue: Future.value(_FakeIPleromaChat()))
          as _i7.Future<_i3.IPleromaChat>);
  @override
  _i7.Future<_i3.IPleromaChatMessage> sendMessage(
          {String? chatId, _i3.IPleromaChatMessageSendData? data}) =>
      (super.noSuchMethod(
          Invocation.method(#sendMessage, [], {#chatId: chatId, #data: data}),
          returnValue:
              Future.value(_FakeIPleromaChatMessage())) as _i7
          .Future<_i3.IPleromaChatMessage>);
  @override
  _i7.Future<dynamic> deleteChatMessage(
          {String? chatMessageRemoteId, String? chatId}) =>
      (super.noSuchMethod(
          Invocation.method(#deleteChatMessage, [],
              {#chatMessageRemoteId: chatMessageRemoteId, #chatId: chatId}),
          returnValue: Future.value(null)) as _i7.Future<dynamic>);
  @override
  _i7.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future.value(null)) as _i7.Future<dynamic>);
}

/// A class which mocks [PleromaMyAccountService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPleromaMyAccountService extends _i1.Mock
    implements _i11.PleromaMyAccountService {
  MockPleromaMyAccountService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get verifyProfileRelativeUrlPath =>
      (super.noSuchMethod(Invocation.getter(#verifyProfileRelativeUrlPath),
          returnValue: '') as String);
  @override
  String get editProfileRelativeUrlPath =>
      (super.noSuchMethod(Invocation.getter(#editProfileRelativeUrlPath),
          returnValue: '') as String);
  @override
  _i2.IPleromaAuthRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
              returnValue: _FakeIPleromaAuthRestService())
          as _i2.IPleromaAuthRestService);
  @override
  _i7.Stream<_i8.PleromaApiState> get pleromaApiStateStream =>
      (super.noSuchMethod(Invocation.getter(#pleromaApiStateStream),
              returnValue: Stream<_i8.PleromaApiState>.empty())
          as _i7.Stream<_i8.PleromaApiState>);
  @override
  _i8.PleromaApiState get pleromaApiState =>
      (super.noSuchMethod(Invocation.getter(#pleromaApiState),
          returnValue: _i8.PleromaApiState.validAuth) as _i8.PleromaApiState);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  _i7.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i7.Stream<bool>);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set isDisposed(bool? _isDisposed) =>
      super.noSuchMethod(Invocation.setter(#isDisposed, _isDisposed),
          returnValueForMissingStub: null);
  @override
  _i4.IPleromaMyAccount parseMyAccountResponse(_i9.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseMyAccountResponse, [httpResponse]),
          returnValue: _FakeIPleromaMyAccount()) as _i4.IPleromaMyAccount);
  @override
  _i5.IPleromaAccountRelationship parseAccountRelationshipResponse(
          _i9.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseAccountRelationshipResponse, [httpResponse]),
          returnValue:
              _FakeIPleromaAccountRelationship()) as _i5
          .IPleromaAccountRelationship);
  @override
  List<_i12.IPleromaStatus> parseStatusListResponse(
          _i9.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseStatusListResponse, [httpResponse]),
          returnValue: <_i12.IPleromaStatus>[]) as List<_i12.IPleromaStatus>);
  @override
  List<_i5.IPleromaAccount> parseAccountListResponse(
          _i9.Response? httpResponse) =>
      (super.noSuchMethod(
          Invocation.method(#parseAccountListResponse, [httpResponse]),
          returnValue: <_i5.IPleromaAccount>[]) as List<_i5.IPleromaAccount>);
  @override
  List<String> parseStringListResponse(_i9.Response? httpResponse) => (super
      .noSuchMethod(Invocation.method(#parseStringListResponse, [httpResponse]),
          returnValue: <String>[]) as List<String>);
  @override
  _i7.Future<_i4.IPleromaMyAccount> updateCredentials(
          _i4.IPleromaMyAccountEdit? data) =>
      (super.noSuchMethod(Invocation.method(#updateCredentials, [data]),
              returnValue: Future.value(_FakeIPleromaMyAccount()))
          as _i7.Future<_i4.IPleromaMyAccount>);
  @override
  _i7.Future<_i4.IPleromaMyAccount> updateFiles(
          _i4.PleromaMyAccountFilesRequest? accountFiles) =>
      (super.noSuchMethod(Invocation.method(#updateFiles, [accountFiles]),
              returnValue: Future.value(_FakeIPleromaMyAccount()))
          as _i7.Future<_i4.IPleromaMyAccount>);
  @override
  _i7.Future<_i4.IPleromaMyAccount> verifyCredentials() =>
      (super.noSuchMethod(Invocation.method(#verifyCredentials, []),
              returnValue: Future.value(_FakeIPleromaMyAccount()))
          as _i7.Future<_i4.IPleromaMyAccount>);
  @override
  _i7.Future<List<_i12.IPleromaStatus>> getBookmarks(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getBookmarks, [], {#pagination: pagination}),
              returnValue: Future.value(<_i12.IPleromaStatus>[]))
          as _i7.Future<List<_i12.IPleromaStatus>>);
  @override
  _i7.Future<List<_i12.IPleromaStatus>> getFavourites(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getFavourites, [], {#pagination: pagination}),
              returnValue: Future.value(<_i12.IPleromaStatus>[]))
          as _i7.Future<List<_i12.IPleromaStatus>>);
  @override
  _i7.Future<List<_i5.IPleromaAccount>> getFollowRequests(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getFollowRequests, [], {#pagination: pagination}),
          returnValue:
              Future.value(<_i5.IPleromaAccount>[])) as _i7
          .Future<List<_i5.IPleromaAccount>>);
  @override
  _i7.Future<dynamic> dispose() =>
      (super.noSuchMethod(Invocation.method(#dispose, []),
          returnValue: Future.value(null)) as _i7.Future<dynamic>);
  @override
  _i7.Future<_i5.IPleromaAccountRelationship> acceptFollowRequest(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(#acceptFollowRequest, [],
                  {#accountRemoteId: accountRemoteId}),
              returnValue: Future.value(_FakeIPleromaAccountRelationship()))
          as _i7.Future<_i5.IPleromaAccountRelationship>);
  @override
  _i7.Future<_i5.IPleromaAccountRelationship> rejectFollowRequest(
          {String? accountRemoteId}) =>
      (super.noSuchMethod(
              Invocation.method(#rejectFollowRequest, [],
                  {#accountRemoteId: accountRemoteId}),
              returnValue: Future.value(_FakeIPleromaAccountRelationship()))
          as _i7.Future<_i5.IPleromaAccountRelationship>);
  @override
  _i7.Future<List<String>> getDomainBlocks(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getDomainBlocks, [], {#pagination: pagination}),
          returnValue: Future.value(<String>[])) as _i7.Future<List<String>>);
  @override
  _i7.Future<List<_i5.IPleromaAccount>> getAccountBlocks(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getAccountBlocks, [], {#pagination: pagination}),
          returnValue:
              Future.value(<_i5.IPleromaAccount>[])) as _i7
          .Future<List<_i5.IPleromaAccount>>);
  @override
  _i7.Future<List<_i5.IPleromaAccount>> getAccountMutes(
          {_i10.IPleromaPaginationRequest? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(#getAccountMutes, [], {#pagination: pagination}),
          returnValue:
              Future.value(<_i5.IPleromaAccount>[])) as _i7
          .Future<List<_i5.IPleromaAccount>>);
}

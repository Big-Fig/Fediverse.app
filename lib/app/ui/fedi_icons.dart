import 'package:flutter/material.dart';

/// Flutter icons FediIcons
/// Copyright (C) 2020 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  FediIcons
///      fonts:
///       - asset: fonts/FediIcons.ttf
///
///
///
import 'package:flutter/widgets.dart';

class FediIcons {
  FediIcons._();

  static const _kFontFam = 'FediIcons';
  static const _kFontPkg = null;

  static const IconData add_user =
      IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_right =
      IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData attachment =
      IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData camera =
      IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData chat =
      IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData close =
      IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emoji =
      IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData envelope =
      IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData filter =
      IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData heart =
      IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData home =
      IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData image =
      IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData menu_vertical =
      IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData menu =
      IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData message =
      IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData notification =
      IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pen =
      IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData personal_message =
      IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData plus =
      IconData(0xe812, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData reply =
      IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData search =
      IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData settings =
      IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData world =
      IconData(0xe816, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_down =
      IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData check =
      IconData(0xe818, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData chevron_left =
      IconData(0xe819, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData chevron_down =
      IconData(0xe81a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData send =
      IconData(0xe81b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData delete =
      IconData(0xe81c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData failed =
      IconData(0xe82e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData warning =
      IconData(0xe82f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData loading =
      IconData(0xe830, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData heart_active =
      IconData(0xe831, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData block =
      IconData(0xe832, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData browser =
      IconData(0xe833, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData follow =
      IconData(0xe834, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData private =
      IconData(0xe836, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData report =
      IconData(0xe837, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData share =
      IconData(0xe838, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData unlisted =
      IconData(0xe839, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData mute =
      IconData(0xe83a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData alias =
      IconData(0xe865, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData audio_solid =
      IconData(0xe866, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData audio =
      IconData(0xe867, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData check_circle =
      IconData(0xe868, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData file =
      IconData(0xe869, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData link =
      IconData(0xe86a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pdf =
      IconData(0xe86c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData doc =
      IconData(0xe86d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData photo =
      IconData(0xe86e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData remove_circle =
      IconData(0xe86f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData remove =
      IconData(0xe870, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData schedule =
      IconData(0xe871, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData toggle_off =
      IconData(0xe872, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData toggle_on =
      IconData(0xe873, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData video_solid =
      IconData(0xe874, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData video =
      IconData(0xe875, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData chevron_down_1 =
      IconData(0xe876, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData minimize =
      IconData(0xe87a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData maximize =
      IconData(0xe87b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pause =
      IconData(0xe87c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData play =
      IconData(0xe87d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData poll =
      IconData(0xe87e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData sound_off =
      IconData(0xe87f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData sound_on =
      IconData(0xe880, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData download =
      IconData(0xe881, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData reload = Icons.refresh;
  static const IconData chevron_up = Icons.keyboard_arrow_up;
  static const IconData forward = Icons.forward;
  static const IconData reorder = Icons.reorder;
  static const IconData bookmark = Icons.bookmark;
  static const IconData list = Icons.list;
  static const IconData theme_system = Icons.brightness_6;
  static const IconData theme_light = Icons.brightness_7;
  static const IconData theme_night = Icons.brightness_3;
}

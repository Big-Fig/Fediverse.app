// Mocks generated by Mockito 5.0.16 from annotations
// in fedi_app/test/app/status/status_bloc_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i14;

import 'package:connectivity_plus/connectivity_plus.dart' as _i25;
import 'package:easy_dispose/easy_dispose.dart' as _i26;
import 'package:fedi_app/connection/connection_service.dart' as _i24;
import 'package:fediverse_api/fediverse_api.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:unifedi_api/src/api/account/identity_proof/unifedi_api_account_identity_proof_model.dart'
    as _i21;
import 'package:unifedi_api/src/api/account/register/response/unifedi_api_register_account_response_model.dart'
    as _i11;
import 'package:unifedi_api/src/api/account/register/unifedi_api_register_account_model.dart'
    as _i22;
import 'package:unifedi_api/src/api/account/relationship/unifedi_api_account_relationship_model.dart'
    as _i10;
import 'package:unifedi_api/src/api/account/service/unifedi_api_account_service.dart'
    as _i19;
import 'package:unifedi_api/src/api/account/unifedi_api_account_model.dart'
    as _i9;
import 'package:unifedi_api/src/api/emoji/reaction/unifedi_api_emoji_reaction_model.dart'
    as _i4;
import 'package:unifedi_api/src/api/feature/unifedi_api_feature_model.dart'
    as _i2;
import 'package:unifedi_api/src/api/list/unifedi_api_list_model.dart' as _i20;
import 'package:unifedi_api/src/api/pagination/unifedi_api_pagination_model.dart'
    as _i15;
import 'package:unifedi_api/src/api/poll/service/unifedi_api_poll_service.dart'
    as _i23;
import 'package:unifedi_api/src/api/poll/unifedi_api_poll_model.dart' as _i12;
import 'package:unifedi_api/src/api/rest/unifedi_api_rest_service.dart' as _i3;
import 'package:unifedi_api/src/api/status/context/unifedi_api_status_context_model.dart'
    as _i7;
import 'package:unifedi_api/src/api/status/post/schedule/unifedi_api_schedule_post_status_model.dart'
    as _i18;
import 'package:unifedi_api/src/api/status/post/unifedi_api_post_status_model.dart'
    as _i17;
import 'package:unifedi_api/src/api/status/scheduled/unifedi_api_scheduled_status_model.dart'
    as _i6;
import 'package:unifedi_api/src/api/status/service/unifedi_api_status_service.dart'
    as _i13;
import 'package:unifedi_api/src/api/status/unifedi_api_status_model.dart'
    as _i5;
import 'package:unifedi_api/src/api/visibility/unifedi_api_visibility_sealed.dart'
    as _i16;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeIUnifediApiFeature_0 extends _i1.Fake
    implements _i2.IUnifediApiFeature {}

class _FakeIUnifediApiRestService_1 extends _i1.Fake
    implements _i3.IUnifediApiRestService {}

class _FakeIUnifediApiEmojiReaction_2 extends _i1.Fake
    implements _i4.IUnifediApiEmojiReaction {}

class _FakeIUnifediApiStatus_3 extends _i1.Fake
    implements _i5.IUnifediApiStatus {}

class _FakeIUnifediApiScheduledStatus_4 extends _i1.Fake
    implements _i6.IUnifediApiScheduledStatus {}

class _FakeIUnifediApiStatusContext_5 extends _i1.Fake
    implements _i7.IUnifediApiStatusContext {}

class _FakeFediverseApiFeatureRequirementState_6 extends _i1.Fake
    implements _i8.FediverseApiFeatureRequirementState {}

class _FakeIUnifediApiAccount_7 extends _i1.Fake
    implements _i9.IUnifediApiAccount {}

class _FakeIUnifediApiAccountRelationship_8 extends _i1.Fake
    implements _i10.IUnifediApiAccountRelationship {}

class _FakeIUnifediApiRegisterAccountResponse_9 extends _i1.Fake
    implements _i11.IUnifediApiRegisterAccountResponse {}

class _FakeIUnifediApiPoll_10 extends _i1.Fake implements _i12.IUnifediApiPoll {
}

/// A class which mocks [IUnifediApiStatusService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiStatusService extends _i1.Mock
    implements _i13.IUnifediApiStatusService {
  MockIUnifediApiStatusService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUnifediApiFeature get getEmojiReactionsFeature =>
      (super.noSuchMethod(Invocation.getter(#getEmojiReactionsFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getEmojiReactionFeature =>
      (super.noSuchMethod(Invocation.getter(#getEmojiReactionFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get addEmojiReactionFeature =>
      (super.noSuchMethod(Invocation.getter(#addEmojiReactionFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get removeEmojiReactionFeature =>
      (super.noSuchMethod(Invocation.getter(#removeEmojiReactionFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get cancelScheduledStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#cancelScheduledStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getScheduledStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#getScheduledStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get reScheduleStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#reScheduleStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getScheduledStatusesFeature =>
      (super.noSuchMethod(Invocation.getter(#getScheduledStatusesFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#getStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getStatusContextFeature =>
      (super.noSuchMethod(Invocation.getter(#getStatusContextFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get favouritedByFeature =>
      (super.noSuchMethod(Invocation.getter(#favouritedByFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get rebloggedByFeature =>
      (super.noSuchMethod(Invocation.getter(#rebloggedByFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get postStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#postStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get postStatusInReplyToConversationIdFeature =>
      (super.noSuchMethod(
          Invocation.getter(#postStatusInReplyToConversationIdFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get postStatusToFeature =>
      (super.noSuchMethod(Invocation.getter(#postStatusToFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get postStatusPreviewFeature =>
      (super.noSuchMethod(Invocation.getter(#postStatusPreviewFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get postStatusContentTypeFeature =>
      (super.noSuchMethod(Invocation.getter(#postStatusContentTypeFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get postStatusExpiresInFeature =>
      (super.noSuchMethod(Invocation.getter(#postStatusExpiresInFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get postStatusPollFeature =>
      (super.noSuchMethod(Invocation.getter(#postStatusPollFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get scheduleStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#scheduleStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get scheduleStatusPollFeature =>
      (super.noSuchMethod(Invocation.getter(#scheduleStatusPollFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get deleteStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#deleteStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get muteStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#muteStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get muteStatusExpiresInFeature =>
      (super.noSuchMethod(Invocation.getter(#muteStatusExpiresInFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unMuteStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#unMuteStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get pinStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#pinStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unPinStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#unPinStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get favouriteStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#favouriteStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unFavouriteStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#unFavouriteStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get bookmarkStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#bookmarkStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unBookmarkStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#unBookmarkStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get reblogStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#reblogStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get reblogStatusVisibilityFeature =>
      (super.noSuchMethod(Invocation.getter(#reblogStatusVisibilityFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unReblogStatusFeature =>
      (super.noSuchMethod(Invocation.getter(#unReblogStatusFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i3.IUnifediApiRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
              returnValue: _FakeIUnifediApiRestService_1())
          as _i3.IUnifediApiRestService);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i14.Future<List<_i4.IUnifediApiEmojiReaction>> getEmojiReactions(
          {String? statusId}) =>
      (super.noSuchMethod(
              Invocation.method(#getEmojiReactions, [], {#statusId: statusId}),
              returnValue: Future<List<_i4.IUnifediApiEmojiReaction>>.value(
                  <_i4.IUnifediApiEmojiReaction>[]))
          as _i14.Future<List<_i4.IUnifediApiEmojiReaction>>);
  @override
  _i14.Future<_i4.IUnifediApiEmojiReaction> getEmojiReaction(
          {String? statusId, String? emoji}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getEmojiReaction, [], {#statusId: statusId, #emoji: emoji}),
              returnValue: Future<_i4.IUnifediApiEmojiReaction>.value(
                  _FakeIUnifediApiEmojiReaction_2()))
          as _i14.Future<_i4.IUnifediApiEmojiReaction>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> addEmojiReaction(
          {String? statusId, String? emoji}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #addEmojiReaction, [], {#statusId: statusId, #emoji: emoji}),
              returnValue: Future<_i5.IUnifediApiStatus>.value(
                  _FakeIUnifediApiStatus_3()))
          as _i14.Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> removeEmojiReaction(
          {String? statusId, String? emoji}) =>
      (super.noSuchMethod(
          Invocation.method(
              #removeEmojiReaction, [], {#statusId: statusId, #emoji: emoji}),
          returnValue: Future<_i5.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus_3())) as _i14
          .Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<void> cancelScheduledStatus({String? scheduledStatusId}) =>
      (super.noSuchMethod(
              Invocation.method(#cancelScheduledStatus, [],
                  {#scheduledStatusId: scheduledStatusId}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i14.Future<void>);
  @override
  _i14.Future<_i6.IUnifediApiScheduledStatus> getScheduledStatus(
          {String? scheduledStatusId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getScheduledStatus, [], {#scheduledStatusId: scheduledStatusId}),
          returnValue: Future<_i6.IUnifediApiScheduledStatus>.value(
              _FakeIUnifediApiScheduledStatus_4())) as _i14
          .Future<_i6.IUnifediApiScheduledStatus>);
  @override
  _i14.Future<_i6.IUnifediApiScheduledStatus> reScheduleStatus(
          {String? scheduledStatusId, DateTime? scheduledAt}) =>
      (super.noSuchMethod(
              Invocation.method(#reScheduleStatus, [], {
                #scheduledStatusId: scheduledStatusId,
                #scheduledAt: scheduledAt
              }),
              returnValue: Future<_i6.IUnifediApiScheduledStatus>.value(
                  _FakeIUnifediApiScheduledStatus_4()))
          as _i14.Future<_i6.IUnifediApiScheduledStatus>);
  @override
  _i14.Future<List<_i6.IUnifediApiScheduledStatus>> getScheduledStatuses(
          {_i15.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getScheduledStatuses, [], {#pagination: pagination}),
              returnValue: Future<List<_i6.IUnifediApiScheduledStatus>>.value(
                  <_i6.IUnifediApiScheduledStatus>[]))
          as _i14.Future<List<_i6.IUnifediApiScheduledStatus>>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> getStatus({String? statusId}) => (super
      .noSuchMethod(Invocation.method(#getStatus, [], {#statusId: statusId}),
          returnValue: Future<_i5.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus_3())) as _i14
      .Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i7.IUnifediApiStatusContext> getStatusContext(
          {String? statusId}) =>
      (super.noSuchMethod(
              Invocation.method(#getStatusContext, [], {#statusId: statusId}),
              returnValue: Future<_i7.IUnifediApiStatusContext>.value(
                  _FakeIUnifediApiStatusContext_5()))
          as _i14.Future<_i7.IUnifediApiStatusContext>);
  @override
  _i14.Future<List<_i9.IUnifediApiAccount>> favouritedBy(
          {String? statusId, _i15.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#favouritedBy, [],
                  {#statusId: statusId, #pagination: pagination}),
              returnValue: Future<List<_i9.IUnifediApiAccount>>.value(
                  <_i9.IUnifediApiAccount>[]))
          as _i14.Future<List<_i9.IUnifediApiAccount>>);
  @override
  _i14.Future<List<_i9.IUnifediApiAccount>> rebloggedBy(
          {String? statusId, _i15.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
          Invocation.method(
              #rebloggedBy, [], {#statusId: statusId, #pagination: pagination}),
          returnValue: Future<List<_i9.IUnifediApiAccount>>.value(
              <_i9.IUnifediApiAccount>[])) as _i14
          .Future<List<_i9.IUnifediApiAccount>>);
  @override
  List<_i16.UnifediApiVisibility> calculatePossibleStatusVisibility() =>
      (super.noSuchMethod(
              Invocation.method(#calculatePossibleStatusVisibility, []),
              returnValue: <_i16.UnifediApiVisibility>[])
          as List<_i16.UnifediApiVisibility>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> postStatus(
          {_i17.IUnifediApiPostStatus? postStatus, String? idempotencyKey}) =>
      (super.noSuchMethod(
              Invocation.method(#postStatus, [],
                  {#postStatus: postStatus, #idempotencyKey: idempotencyKey}),
              returnValue: Future<_i5.IUnifediApiStatus>.value(
                  _FakeIUnifediApiStatus_3()))
          as _i14.Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i6.IUnifediApiScheduledStatus> scheduleStatus(
          {_i18.IUnifediApiSchedulePostStatus? postStatus,
          String? idempotencyKey}) =>
      (super.noSuchMethod(
              Invocation.method(#scheduleStatus, [],
                  {#postStatus: postStatus, #idempotencyKey: idempotencyKey}),
              returnValue: Future<_i6.IUnifediApiScheduledStatus>.value(
                  _FakeIUnifediApiScheduledStatus_4()))
          as _i14.Future<_i6.IUnifediApiScheduledStatus>);
  @override
  _i14.Future<void> deleteStatus({String? statusId}) => (super.noSuchMethod(
      Invocation.method(#deleteStatus, [], {#statusId: statusId}),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i14.Future<void>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> muteStatus(
          {String? statusId, Duration? expiresIn}) =>
      (super.noSuchMethod(
          Invocation.method(
              #muteStatus, [], {#statusId: statusId, #expiresIn: expiresIn}),
          returnValue: Future<_i5.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus_3())) as _i14
          .Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> unMuteStatus({String? statusId}) => (super
      .noSuchMethod(Invocation.method(#unMuteStatus, [], {#statusId: statusId}),
          returnValue: Future<_i5.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus_3())) as _i14
      .Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> pinStatus({String? statusId}) => (super
      .noSuchMethod(Invocation.method(#pinStatus, [], {#statusId: statusId}),
          returnValue: Future<_i5.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus_3())) as _i14
      .Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> unPinStatus({String? statusId}) => (super
      .noSuchMethod(Invocation.method(#unPinStatus, [], {#statusId: statusId}),
          returnValue: Future<_i5.IUnifediApiStatus>.value(
              _FakeIUnifediApiStatus_3())) as _i14
      .Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> favouriteStatus({String? statusId}) =>
      (super.noSuchMethod(
              Invocation.method(#favouriteStatus, [], {#statusId: statusId}),
              returnValue: Future<_i5.IUnifediApiStatus>.value(
                  _FakeIUnifediApiStatus_3()))
          as _i14.Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> unFavouriteStatus({String? statusId}) =>
      (super.noSuchMethod(
              Invocation.method(#unFavouriteStatus, [], {#statusId: statusId}),
              returnValue: Future<_i5.IUnifediApiStatus>.value(
                  _FakeIUnifediApiStatus_3()))
          as _i14.Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> bookmarkStatus({String? statusId}) =>
      (super.noSuchMethod(
              Invocation.method(#bookmarkStatus, [], {#statusId: statusId}),
              returnValue: Future<_i5.IUnifediApiStatus>.value(
                  _FakeIUnifediApiStatus_3()))
          as _i14.Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> unBookmarkStatus({String? statusId}) =>
      (super.noSuchMethod(
              Invocation.method(#unBookmarkStatus, [], {#statusId: statusId}),
              returnValue: Future<_i5.IUnifediApiStatus>.value(
                  _FakeIUnifediApiStatus_3()))
          as _i14.Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> reblogStatus(
          {String? statusId, _i16.UnifediApiVisibility? visibility}) =>
      (super.noSuchMethod(
              Invocation.method(#reblogStatus, [],
                  {#statusId: statusId, #visibility: visibility}),
              returnValue: Future<_i5.IUnifediApiStatus>.value(
                  _FakeIUnifediApiStatus_3()))
          as _i14.Future<_i5.IUnifediApiStatus>);
  @override
  _i14.Future<_i5.IUnifediApiStatus> unReblogStatus({String? statusId}) =>
      (super.noSuchMethod(
              Invocation.method(#unReblogStatus, [], {#statusId: statusId}),
              returnValue: Future<_i5.IUnifediApiStatus>.value(
                  _FakeIUnifediApiStatus_3()))
          as _i14.Future<_i5.IUnifediApiStatus>);
  @override
  _i8.FediverseApiFeatureRequirementState checkFeatureState(
          _i2.IUnifediApiFeature? feature) =>
      (super.noSuchMethod(Invocation.method(#checkFeatureState, [feature]),
              returnValue: _FakeFediverseApiFeatureRequirementState_6())
          as _i8.FediverseApiFeatureRequirementState);
  @override
  String toString() => super.toString();
  @override
  _i14.Future<void> dispose() => (super.noSuchMethod(
      Invocation.method(#dispose, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i14.Future<void>);
}

/// A class which mocks [IUnifediApiAccountService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiAccountService extends _i1.Mock
    implements _i19.IUnifediApiAccountService {
  MockIUnifediApiAccountService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUnifediApiFeature get getAccountStatusesFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountStatusesFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesWithMutedFeature => (super
      .noSuchMethod(Invocation.getter(#getAccountStatusesWithMutedFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesExcludeVisibilitiesFeature =>
      (super.noSuchMethod(
          Invocation.getter(#getAccountStatusesExcludeVisibilitiesFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesPaginationMinIdFeature =>
      (super.noSuchMethod(
          Invocation.getter(#getAccountStatusesPaginationMinIdFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesExcludeReblogsFeature => (super
      .noSuchMethod(Invocation.getter(#getAccountStatusesExcludeReblogsFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountStatusesTaggedFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountStatusesTaggedFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFavouritedStatusesFeature => (super
      .noSuchMethod(Invocation.getter(#getAccountFavouritedStatusesFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountWithRelationshipFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountWithRelationshipFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getRelationshipWithAccountsFeature => (super
      .noSuchMethod(Invocation.getter(#getRelationshipWithAccountsFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get searchFeature =>
      (super.noSuchMethod(Invocation.getter(#searchFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getListsWithAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#getListsWithAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountIdentifyProofsFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountIdentifyProofsFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get followAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#followAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get followAccountNotifyFeature =>
      (super.noSuchMethod(Invocation.getter(#followAccountNotifyFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unFollowAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unFollowAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get pinAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#pinAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unPinAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unPinAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get muteAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#muteAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unMuteAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unMuteAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get subscribeAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#subscribeAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unSubscribeAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unSubscribeAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get blockAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#blockAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unBlockAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#unBlockAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get blockDomainFeature =>
      (super.noSuchMethod(Invocation.getter(#blockDomainFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get unBlockDomainFeature =>
      (super.noSuchMethod(Invocation.getter(#unBlockDomainFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get noteFeature =>
      (super.noSuchMethod(Invocation.getter(#noteFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get reportAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#reportAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get reportAccountForwardFeature =>
      (super.noSuchMethod(Invocation.getter(#reportAccountForwardFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFollowingsFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountFollowingsFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFollowersFeature =>
      (super.noSuchMethod(Invocation.getter(#getAccountFollowersFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFollowingsWithRelationshipFeature =>
      (super.noSuchMethod(
          Invocation.getter(#getAccountFollowingsWithRelationshipFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get getAccountFollowersWithRelationshipFeature =>
      (super.noSuchMethod(
          Invocation.getter(#getAccountFollowersWithRelationshipFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountReasonFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountReasonFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountCaptchaFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountCaptchaFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountFullNameFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountFullNameFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountBioFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountBioFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get registerAccountInviteTokenFeature =>
      (super.noSuchMethod(Invocation.getter(#registerAccountInviteTokenFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i3.IUnifediApiRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
              returnValue: _FakeIUnifediApiRestService_1())
          as _i3.IUnifediApiRestService);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i14.Future<List<_i5.IUnifediApiStatus>> getAccountStatuses(
          {String? accountId,
          String? tagged,
          bool? pinned,
          bool? excludeReplies,
          bool? excludeReblogs,
          List<_i16.UnifediApiVisibility>? excludeVisibilities,
          bool? withMuted,
          bool? onlyWithMedia,
          _i15.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountStatuses, [], {
                #accountId: accountId,
                #tagged: tagged,
                #pinned: pinned,
                #excludeReplies: excludeReplies,
                #excludeReblogs: excludeReblogs,
                #excludeVisibilities: excludeVisibilities,
                #withMuted: withMuted,
                #onlyWithMedia: onlyWithMedia,
                #pagination: pagination
              }),
              returnValue: Future<List<_i5.IUnifediApiStatus>>.value(
                  <_i5.IUnifediApiStatus>[]))
          as _i14.Future<List<_i5.IUnifediApiStatus>>);
  @override
  List<_i16.UnifediApiVisibility>
      calculatePossibleExcludeVisibilitiesValues() => (super.noSuchMethod(
          Invocation.method(#calculatePossibleExcludeVisibilitiesValues, []),
          returnValue: <
              _i16.UnifediApiVisibility>[]) as List<_i16.UnifediApiVisibility>);
  @override
  _i14.Future<List<_i5.IUnifediApiStatus>> getAccountFavouritedStatuses(
          {String? accountId, _i15.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountFavouritedStatuses, [],
                  {#accountId: accountId, #pagination: pagination}),
              returnValue: Future<List<_i5.IUnifediApiStatus>>.value(
                  <_i5.IUnifediApiStatus>[]))
          as _i14.Future<List<_i5.IUnifediApiStatus>>);
  @override
  _i14.Future<_i9.IUnifediApiAccount> getAccount(
          {String? accountId, bool? withRelationship}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccount, [],
                  {#accountId: accountId, #withRelationship: withRelationship}),
              returnValue: Future<_i9.IUnifediApiAccount>.value(
                  _FakeIUnifediApiAccount_7()))
          as _i14.Future<_i9.IUnifediApiAccount>);
  @override
  _i14.Future<List<_i10.IUnifediApiAccountRelationship>>
      getRelationshipWithAccounts({List<String>? accountIds}) =>
          (super.noSuchMethod(
              Invocation.method(
                  #getRelationshipWithAccounts, [], {#accountIds: accountIds}),
              returnValue:
                  Future<List<_i10.IUnifediApiAccountRelationship>>.value(
                      <_i10.IUnifediApiAccountRelationship>[])) as _i14
              .Future<List<_i10.IUnifediApiAccountRelationship>>);
  @override
  _i14.Future<List<_i9.IUnifediApiAccount>> search(
          {String? query, bool? resolve, bool? following, int? limit}) =>
      (super.noSuchMethod(
              Invocation.method(#search, [], {
                #query: query,
                #resolve: resolve,
                #following: following,
                #limit: limit
              }),
              returnValue: Future<List<_i9.IUnifediApiAccount>>.value(
                  <_i9.IUnifediApiAccount>[]))
          as _i14.Future<List<_i9.IUnifediApiAccount>>);
  @override
  _i14.Future<List<_i20.IUnifediApiList>> getListsWithAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
          Invocation.method(#getListsWithAccount, [], {#accountId: accountId}),
          returnValue: Future<List<_i20.IUnifediApiList>>.value(
              <_i20.IUnifediApiList>[])) as _i14
          .Future<List<_i20.IUnifediApiList>>);
  @override
  _i14.Future<List<_i21.IUnifediApiAccountIdentityProof>>
      getAccountIdentifyProofs({String? accountId}) => (super.noSuchMethod(
          Invocation.method(
              #getAccountIdentifyProofs, [], {#accountId: accountId}),
          returnValue: Future<List<_i21.IUnifediApiAccountIdentityProof>>.value(
              <_i21.IUnifediApiAccountIdentityProof>[])) as _i14
          .Future<List<_i21.IUnifediApiAccountIdentityProof>>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> followAccount(
          {String? accountId, bool? notify, bool? reblogs}) =>
      (super.noSuchMethod(
              Invocation.method(#followAccount, [],
                  {#accountId: accountId, #notify: notify, #reblogs: reblogs}),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> unFollowAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#unFollowAccount, [], {#accountId: accountId}),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> subscribeAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#subscribeAccount, [], {#accountId: accountId}),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> unSubscribeAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
          Invocation.method(#unSubscribeAccount, [], {#accountId: accountId}),
          returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
              _FakeIUnifediApiAccountRelationship_8())) as _i14
          .Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> pinAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#pinAccount, [], {#accountId: accountId}),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> unPinAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#unPinAccount, [], {#accountId: accountId}),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> muteAccount(
          {String? accountId, bool? notifications, Duration? expireIn}) =>
      (super.noSuchMethod(
              Invocation.method(#muteAccount, [], {
                #accountId: accountId,
                #notifications: notifications,
                #expireIn: expireIn
              }),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> unMuteAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#unMuteAccount, [], {#accountId: accountId}),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> blockAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#blockAccount, [], {#accountId: accountId}),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> unBlockAccount(
          {String? accountId}) =>
      (super.noSuchMethod(
              Invocation.method(#unBlockAccount, [], {#accountId: accountId}),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<void> blockDomain({String? domain}) => (super.noSuchMethod(
      Invocation.method(#blockDomain, [], {#domain: domain}),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i14.Future<void>);
  @override
  _i14.Future<void> unBlockDomain({String? domain}) => (super.noSuchMethod(
      Invocation.method(#unBlockDomain, [], {#domain: domain}),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i14.Future<void>);
  @override
  _i14.Future<void> reportAccount(
          {String? accountId,
          List<String>? statusIds,
          String? comment,
          bool? forward}) =>
      (super.noSuchMethod(
              Invocation.method(#reportAccount, [], {
                #accountId: accountId,
                #statusIds: statusIds,
                #comment: comment,
                #forward: forward
              }),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i14.Future<void>);
  @override
  _i14.Future<List<_i9.IUnifediApiAccount>> getAccountFollowings(
          {String? accountId,
          bool? withRelationship,
          _i15.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountFollowings, [], {
                #accountId: accountId,
                #withRelationship: withRelationship,
                #pagination: pagination
              }),
              returnValue: Future<List<_i9.IUnifediApiAccount>>.value(
                  <_i9.IUnifediApiAccount>[]))
          as _i14.Future<List<_i9.IUnifediApiAccount>>);
  @override
  _i14.Future<List<_i9.IUnifediApiAccount>> getAccountFollowers(
          {String? accountId,
          bool? withRelationship,
          _i15.IUnifediApiPagination? pagination}) =>
      (super.noSuchMethod(
              Invocation.method(#getAccountFollowers, [], {
                #accountId: accountId,
                #withRelationship: withRelationship,
                #pagination: pagination
              }),
              returnValue: Future<List<_i9.IUnifediApiAccount>>.value(
                  <_i9.IUnifediApiAccount>[]))
          as _i14.Future<List<_i9.IUnifediApiAccount>>);
  @override
  _i14.Future<_i10.IUnifediApiAccountRelationship> note(
          {String? accountId, String? comment}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #note, [], {#accountId: accountId, #comment: comment}),
              returnValue: Future<_i10.IUnifediApiAccountRelationship>.value(
                  _FakeIUnifediApiAccountRelationship_8()))
          as _i14.Future<_i10.IUnifediApiAccountRelationship>);
  @override
  _i14.Future<_i11.IUnifediApiRegisterAccountResponse> registerAccount(
          {_i22.IUnifediApiRegisterAccount? registerAccount}) =>
      (super.noSuchMethod(
          Invocation.method(
              #registerAccount, [], {#registerAccount: registerAccount}),
          returnValue: Future<_i11.IUnifediApiRegisterAccountResponse>.value(
              _FakeIUnifediApiRegisterAccountResponse_9())) as _i14
          .Future<_i11.IUnifediApiRegisterAccountResponse>);
  @override
  String toString() => super.toString();
  @override
  _i8.FediverseApiFeatureRequirementState checkFeatureState(
          _i2.IUnifediApiFeature? feature) =>
      (super.noSuchMethod(Invocation.method(#checkFeatureState, [feature]),
              returnValue: _FakeFediverseApiFeatureRequirementState_6())
          as _i8.FediverseApiFeatureRequirementState);
  @override
  _i14.Future<void> dispose() => (super.noSuchMethod(
      Invocation.method(#dispose, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i14.Future<void>);
}

/// A class which mocks [IUnifediApiPollService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUnifediApiPollService extends _i1.Mock
    implements _i23.IUnifediApiPollService {
  MockIUnifediApiPollService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUnifediApiFeature get getPollFeature =>
      (super.noSuchMethod(Invocation.getter(#getPollFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i2.IUnifediApiFeature get voteFeature =>
      (super.noSuchMethod(Invocation.getter(#voteFeature),
          returnValue: _FakeIUnifediApiFeature_0()) as _i2.IUnifediApiFeature);
  @override
  _i3.IUnifediApiRestService get restService =>
      (super.noSuchMethod(Invocation.getter(#restService),
              returnValue: _FakeIUnifediApiRestService_1())
          as _i3.IUnifediApiRestService);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  _i14.Future<_i12.IUnifediApiPoll> getPoll({String? pollId}) =>
      (super.noSuchMethod(Invocation.method(#getPoll, [], {#pollId: pollId}),
              returnValue:
                  Future<_i12.IUnifediApiPoll>.value(_FakeIUnifediApiPoll_10()))
          as _i14.Future<_i12.IUnifediApiPoll>);
  @override
  _i14.Future<_i12.IUnifediApiPoll> vote(
          {String? pollId, List<int>? voteIndexes}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #vote, [], {#pollId: pollId, #voteIndexes: voteIndexes}),
              returnValue:
                  Future<_i12.IUnifediApiPoll>.value(_FakeIUnifediApiPoll_10()))
          as _i14.Future<_i12.IUnifediApiPoll>);
  @override
  String toString() => super.toString();
  @override
  _i8.FediverseApiFeatureRequirementState checkFeatureState(
          _i2.IUnifediApiFeature? feature) =>
      (super.noSuchMethod(Invocation.method(#checkFeatureState, [feature]),
              returnValue: _FakeFediverseApiFeatureRequirementState_6())
          as _i8.FediverseApiFeatureRequirementState);
  @override
  _i14.Future<void> dispose() => (super.noSuchMethod(
      Invocation.method(#dispose, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i14.Future<void>);
}

/// A class which mocks [IConnectionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIConnectionService extends _i1.Mock
    implements _i24.IConnectionService {
  MockIConnectionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Stream<_i25.ConnectivityResult> get connectionStateStream =>
      (super.noSuchMethod(Invocation.getter(#connectionStateStream),
              returnValue: Stream<_i25.ConnectivityResult>.empty())
          as _i14.Stream<_i25.ConnectivityResult>);
  @override
  _i25.ConnectivityResult get connectionState => (super.noSuchMethod(
      Invocation.getter(#connectionState),
      returnValue: _i25.ConnectivityResult.wifi) as _i25.ConnectivityResult);
  @override
  _i14.Stream<bool> get isConnectedStream =>
      (super.noSuchMethod(Invocation.getter(#isConnectedStream),
          returnValue: Stream<bool>.empty()) as _i14.Stream<bool>);
  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  _i26.DisposeOrder get disposeOrder =>
      (super.noSuchMethod(Invocation.getter(#disposeOrder),
          returnValue: _i26.DisposeOrder.lifo) as _i26.DisposeOrder);
  @override
  bool get catchExceptions => (super
          .noSuchMethod(Invocation.getter(#catchExceptions), returnValue: false)
      as bool);
  @override
  List<_i26.IDisposable> get disposables =>
      (super.noSuchMethod(Invocation.getter(#disposables),
          returnValue: <_i26.IDisposable>[]) as List<_i26.IDisposable>);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set isDisposed(bool? _isDisposed) =>
      super.noSuchMethod(Invocation.setter(#isDisposed, _isDisposed),
          returnValueForMissingStub: null);
  @override
  _i14.Future<void> internalAsyncInit() => (super.noSuchMethod(
      Invocation.method(#internalAsyncInit, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i14.Future<void>);
  @override
  String toString() => super.toString();
  @override
  void addDisposable(_i26.IDisposable? disposable) =>
      super.noSuchMethod(Invocation.method(#addDisposable, [disposable]),
          returnValueForMissingStub: null);
  @override
  void addDisposables(Iterable<_i26.IDisposable>? disposables) =>
      super.noSuchMethod(Invocation.method(#addDisposables, [disposables]),
          returnValueForMissingStub: null);
  @override
  _i14.Future<void> performDispose() => (super.noSuchMethod(
      Invocation.method(#performDispose, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i14.Future<void>);
  @override
  _i14.Future<void> dispose() => (super.noSuchMethod(
      Invocation.method(#dispose, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i14.Future<void>);
}
